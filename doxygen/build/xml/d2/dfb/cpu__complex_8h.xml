<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d2/dfb/cpu__complex_8h" kind="file" language="C++">
    <compoundname>cpu_complex.h</compoundname>
    <includes local="no">tgmath.h</includes>
    <includedby refid="d1/d74/hr__complex_8h" local="yes">hr_complex.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>cpu_complex.h</label>
        <link refid="d2/dfb/cpu__complex_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tgmath.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>gaugefix.h</label>
        <link refid="d8/d7d/gaugefix_8h_source"/>
      </node>
      <node id="13">
        <label>dirac.h</label>
        <link refid="d0/d40/dirac_8h"/>
      </node>
      <node id="17">
        <label>global.h</label>
        <link refid="d2/d49/global_8h_source"/>
      </node>
      <node id="12">
        <label>utils.h</label>
        <link refid="d5/d60/utils_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>rational_functions.h</label>
        <link refid="d5/dbc/rational__functions_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>disconnected.h</label>
        <link refid="dc/d1e/disconnected_8h_source"/>
      </node>
      <node id="22">
        <label>clover_tools.h</label>
        <link refid="da/d6a/clover__tools_8h_source"/>
      </node>
      <node id="21">
        <label>spinor_field.h</label>
        <link refid="d3/ded/spinor__field_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>gamma_spinor.h</label>
        <link refid="d8/d00/gamma__spinor_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>cpu_complex.h</label>
        <link refid="d2/dfb/cpu__complex_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>io.h</label>
        <link refid="dc/dac/io_8h_source"/>
      </node>
      <node id="24">
        <label>dirac_cpu.h</label>
        <link refid="df/d5f/dirac__cpu_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>wilsonflow.h</label>
        <link refid="d3/df8/wilsonflow_8h_source"/>
      </node>
      <node id="9">
        <label>observables.h</label>
        <link refid="d0/d30/observables_8h_source"/>
      </node>
      <node id="15">
        <label>suN_types.h</label>
        <link refid="d9/d21/suN__types_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>spectrum.h</label>
        <link refid="d6/d16/spectrum_8h_source"/>
      </node>
      <node id="14">
        <label>linear_algebra.h</label>
        <link refid="dc/d9c/linear__algebra_8h_source"/>
      </node>
      <node id="25">
        <label>dirac_default.h</label>
        <link refid="dd/d5f/dirac__default_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>spin_matrix.h</label>
        <link refid="d8/d1e/spin__matrix_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>update.h</label>
        <link refid="d8/d72/update_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hr_complex.h</label>
        <link refid="d1/d74/hr__complex_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>propagator.h</label>
        <link refid="d6/d71/propagator_8h_source"/>
      </node>
      <node id="32">
        <label>scattering.h</label>
        <link refid="df/dc5/scattering_8h_source"/>
      </node>
      <node id="23">
        <label>communications.h</label>
        <link refid="d2/d6f/communications_8h"/>
      </node>
      <node id="30">
        <label>suN.h</label>
        <link refid="d1/d36/suN_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>memory.h</label>
        <link refid="dc/d18/memory_8h"/>
      </node>
      <node id="27">
        <label>moreio.h</label>
        <link refid="d0/d5a/moreio_8h_source"/>
      </node>
      <node id="28">
        <label>random.h</label>
        <link refid="d1/d79/random_8h_source"/>
      </node>
      <node id="5">
        <label>glueballs.h</label>
        <link refid="db/d97/glueballs_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>inverters.h</label>
        <link refid="d3/d5d/inverters_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>clover_exp.h</label>
        <link refid="d3/dde/clover__exp_8h_source"/>
      </node>
      <node id="16">
        <label>check_options.h</label>
        <link refid="d8/d4c/check__options_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a2dfb2bdfab52fe8d2fc6c1fdb61fa153" prot="public" static="no">
        <name>_complex_re</name>
        <param><defname>a</defname></param>
        <initializer>   creal(a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="41" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1adcac101bd9e8c329f95086e8b9b22972" prot="public" static="no">
        <name>_complex_im</name>
        <param><defname>a</defname></param>
        <initializer>   cimag(a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="47" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a27bccfbe4666912da2c8b608f49063e5" prot="public" static="no">
        <name>_complex_0</name>
        <param><defname>a</defname></param>
        <initializer>   (a)=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="53" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a811d6fa64af346c25a9d5939711ef7bd" prot="public" static="no">
        <name>_complex_1</name>
        <param><defname>a</defname></param>
        <initializer>   (a)=1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="58" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a6dd5c334eb9841d1a68e4d13d6d6da1b" prot="public" static="no">
        <name>_complex_add_1</name>
        <param><defname>a</defname></param>
        <initializer>   (a)+=1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="64" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1af88af09a0336b39caf4b6abf55b9353f" prot="public" static="no">
        <name>_complex_i</name>
        <param><defname>a</defname></param>
        <initializer>   (a)=I</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="70" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a48bf55f19e0c5dd5a05e9fa3b45b5712" prot="public" static="no">
        <name>_complex_star</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)=conj(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="76" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a1df77e31055621ffb85afa3623f5500a" prot="public" static="no">
        <name>_complex_star_minus</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)=-conj(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="82" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1ab0da935f6f161b632158b9468d34f43e" prot="public" static="no">
        <name>_complex_star_assign</name>
        <param><defname>a</defname></param>
        <initializer>   (a)=conj(a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="88" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a59e5e9ffb8b56cb562579a246d915d1c" prot="public" static="no">
        <name>_complex_mul</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)*(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="94" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a728916918c2f9a79a606bb06685b83e3" prot="public" static="no">
        <name>_complex_mulr</name>
        <param><defname>a</defname></param>
        <param><defname>r</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)=(r)*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="100" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a27d2fa7a298d74c3b8777f495ed4019f" prot="public" static="no">
        <name>_complex_add</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)+(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="106" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a435ffd89e7bbe58e3caafe7e36ecef1d" prot="public" static="no">
        <name>_complex_sub</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)-(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="112" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a9fa877e2a631a5202eab28363f1ed162" prot="public" static="no">
        <name>_complex_add_star</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)+conj(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="118" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a3c601fce12284ca0689b7f518a212cfe" prot="public" static="no">
        <name>_complex_sub_star</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)-conj(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="123" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a0b05f2f70aeda005c57f344514cdd5ee" prot="public" static="no">
        <name>_complex_div</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>  (a)=(b)/(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="129" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a0781f74ab90944691c9219c451da2d1b" prot="public" static="no">
        <name>_complex_inv</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>  (a)=1/(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="135" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a8739496677b60f49e0c604fc39857b23" prot="public" static="no">
        <name>_complex_prod</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   conj(a)*b</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="141" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1ac9998335d4f180fe9a84529caacdd5c9" prot="public" static="no">
        <name>_complex_prod_re</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   creal(conj(a)*b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="147" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1aa4fa175ad3ae414b20496bd693a9534b" prot="public" static="no">
        <name>_complex_prod_m1_re</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   creal(conj(1-a)*(1-b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="153" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a780183a4395415cf0830504039147f84" prot="public" static="no">
        <name>_complex_prod_im</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   cimag(conj(a)*b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="159" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1aa9e0bf951677993c27c0fa4974b1595d" prot="public" static="no">
        <name>_complex_prod_assign</name>
        <param><defname>c</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (c)+=conj(a)*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="165" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a4b01df109863c72f5155366fab2fa127" prot="public" static="no">
        <name>_complex_mul_star_star_assign</name>
        <param><defname>c</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (c)+=conj((a)*(b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="171" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a554a1cd17023caedc70bcda2ff77d278" prot="public" static="no">
        <name>_complex_minus</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)=-(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="177" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1abd9b9b1b445f7c350b5c1ce306a96ac2" prot="public" static="no">
        <name>_complex_i_minus</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)=-I*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="183" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a3a5250616c89625c9a347d912c43f961" prot="public" static="no">
        <name>_complex_i_plus</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)=I*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="189" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1aedef3cf7a9d96c5eb3c455cd3bbaf245" prot="public" static="no">
        <name>_complex_i_add</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)+I*(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="195" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a9ec47b3244fbeb3fa9d489c5a1f888ee" prot="public" static="no">
        <name>_complex_i_sub</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)-I*(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="201" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a96bf0f053dda87bfb8677fd24ce2f321" prot="public" static="no">
        <name>_complex_add_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)+=(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="207" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a3075928aae8b4744c23052fe97fd8861" prot="public" static="no">
        <name>_complex_sub_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)-=(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="213" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1ab7a2c99b0aaebc4e7c8a583eff7bf4a0" prot="public" static="no">
        <name>_complex_add_star_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)+=(b)+conj(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="219" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1ac955c028ed24074f232afc6aff159b3a" prot="public" static="no">
        <name>_complex_i_add_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)+=I*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="225" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1ac1ebf0aa39d58581b83da741aaa9ee81" prot="public" static="no">
        <name>_complex_i_sub_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)-=I*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="231" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a465985e54ba74be5dfc67a93e320badc" prot="public" static="no">
        <name>_complex_mul_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)+=(b)*(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="237" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a9b3bd4fa39a06fa086441b0c187830e6" prot="public" static="no">
        <name>_complex_mulcr_assign</name>
        <param><defname>a</defname></param>
        <param><defname>r</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>  (a)+=(r)*(b)*(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="243" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a141e0bb192ce764514203011ffc53f94" prot="public" static="no">
        <name>_complex_mul_star</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)*conj(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="249" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a926015bd95396b6e4127fd54f2d09510" prot="public" static="no">
        <name>_complex_mul_star_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)+=(b)*conj(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="255" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1abcf1ecc99118c7e01b865e8e47677d19" prot="public" static="no">
        <name>_complex_mul_star_assign_re</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)+=creal((b)*conj(c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="261" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a1f018955ce22e158966bf2dab63a9f2a" prot="public" static="no">
        <name>_complex_mul_sub_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)-=(b)*(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="267" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a65ef522b45c67f3820a11fafe55d6a85" prot="public" static="no">
        <name>_complex_mulr_assign</name>
        <param><defname>a</defname></param>
        <param><defname>r</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)+=(r)*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="273" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1ae65bef30f1cb58f3d4842a2429ade1af" prot="public" static="no">
        <name>_complex_rlc</name>
        <param><defname>a</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>c1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>c2</defname></param>
        <initializer>    (a)=(r1)*(c1)+(r2)*(c2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="279" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a5ec14ec0ed07ce967b68a4e1909bda87" prot="public" static="no">
        <name>_complex_rlc_assign</name>
        <param><defname>a</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>c1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>c2</defname></param>
        <initializer>    (a)+=(r1)*(c1)+(r2)*(c2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="285" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1a169090f5562eb0615cfd8158f36b72f9" prot="public" static="no">
        <name>_complex_clc</name>
        <param><defname>a</defname></param>
        <param><defname>z1</defname></param>
        <param><defname>c1</defname></param>
        <param><defname>z2</defname></param>
        <param><defname>c2</defname></param>
        <initializer>    (a)=(z1)*(c1)+(z2)*(c2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="291" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/dfb/cpu__complex_8h_1aa7b66dfa9fee63d3189998469e4c4ab4" prot="public" static="no">
        <name>_complex_clc_assign</name>
        <param><defname>a</defname></param>
        <param><defname>z1</defname></param>
        <param><defname>c1</defname></param>
        <param><defname>z2</defname></param>
        <param><defname>c2</defname></param>
        <initializer>    (a)+=(z1)*(c1)+(z2)*(c2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="297" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d2/dfb/cpu__complex_8h_1adfa99d49e364e7295aa377dc48208a89" prot="public" static="no">
        <type>double complex</type>
        <definition>typedef double complex hr_complex</definition>
        <argsstring></argsstring>
        <name>hr_complex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="27" column="24" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d2/dfb/cpu__complex_8h_1a682f1c4bdaa80d20a153e5ec47ebdb40" prot="public" static="no">
        <type>float complex</type>
        <definition>typedef float complex hr_complex_flt</definition>
        <argsstring></argsstring>
        <name>hr_complex_flt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" line="28" column="23" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************\</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>(c)<sp/>2008,<sp/>Claudio<sp/>Pica<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>All<sp/>rights<sp/>reserved.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">\***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>File<sp/>cpu_complex.h</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Type<sp/>definitions<sp/>and<sp/>macros<sp/>for<sp/>complex<sp/>numbers<sp/>used<sp/>in<sp/>C</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>COMPLEX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMPLEX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/>Definitions<sp/>of<sp/>type<sp/>complex</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tgmath.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tgmath<sp/>includes<sp/>math.h<sp/>and<sp/>complex.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>defines<sp/>type-generic<sp/>macros<sp/>for<sp/>math<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>e.g:<sp/>float<sp/>complex<sp/>fc;<sp/>creal(fc)<sp/>invokes<sp/>crealf(fc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>hr_complex;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>complex<sp/>hr_complex_flt;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/>Macros<sp/>for<sp/>complex<sp/>numbers</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*</highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/>Arguments<sp/>are<sp/>variables<sp/>of<sp/>type<sp/>complex</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="39"><highlight class="comment">*<sp/>Re(a)<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="40"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_re(a)<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/>creal(a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="45"><highlight class="comment">*<sp/>Im(a)<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="46"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_im(a)<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/>cimag(a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="51"><highlight class="comment">*<sp/>a=0<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="52"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_0(a)<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="56"><highlight class="comment">*<sp/>a=1.<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="57"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_1(a)<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="62"><highlight class="comment">*<sp/>a+=1.<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="63"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_add_1(a)<sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="68"><highlight class="comment">*<sp/>a=i<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="69"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i(a)<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=I</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="74"><highlight class="comment">*<sp/>a=b^+<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="75"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_star(a,b)<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=conj(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="80"><highlight class="comment">*<sp/>a=-b^+<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="81"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_star_minus(a,b)<sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=-conj(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="86"><highlight class="comment">*<sp/>a=a^+<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="87"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_star_assign(a)<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=conj(a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="92"><highlight class="comment">*<sp/>a=b*c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="93"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)*(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*<sp/>a=r*b<sp/>(a,b<sp/>complex;<sp/>r<sp/>real)</highlight></codeline>
<codeline lineno="99"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mulr(a,r,b)<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(r)*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="104"><highlight class="comment">*<sp/>a=b+c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="105"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_add(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)+(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="110"><highlight class="comment">*<sp/>a=b-c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="111"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_sub(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)-(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="116"><highlight class="comment">*<sp/>a=b+c^(+)<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="117"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_add_star(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)+conj(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="121"><highlight class="comment">*<sp/>a=b-c^(+)<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="122"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_sub_star(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)-conj(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="127"><highlight class="comment">*<sp/>a=b/c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="128"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_div(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/>(a)=(b)/(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="133"><highlight class="comment">*<sp/>a=1/b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="134"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_inv(a,b)<sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/>(a)=1/(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="139"><highlight class="comment">*<sp/>a^*b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="140"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_prod(a,b)<sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/>conj(a)*b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="145"><highlight class="comment">*<sp/>Re(a^*b)<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="146"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_prod_re(a,b)<sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/><sp/>creal(conj(a)*b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="151"><highlight class="comment">*<sp/>Re((1-a)^*(1-b))<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="152"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_prod_m1_re(a,b)<sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/>creal(conj(1-a)*(1-b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="157"><highlight class="comment">*<sp/>Im(a^*b)<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="158"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_prod_im(a,b)<sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/>cimag(conj(a)*b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="163"><highlight class="comment">*<sp/>c+=(a^*b)<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="164"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_prod_assign(c,a,b)<sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/>(c)+=conj(a)*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="169"><highlight class="comment">*<sp/>c+=(a^*b^)<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="170"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul_star_star_assign(c,a,b)<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/>(c)+=conj((a)*(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="175"><highlight class="comment">*<sp/>a=-b<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="176"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_minus(a,b)<sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=-(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="181"><highlight class="comment">*<sp/>a=-i*b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="182"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i_minus(a,b)<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=-I*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="187"><highlight class="comment">*<sp/>a=i*b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="188"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i_plus(a,b)<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=I*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="193"><highlight class="comment">*<sp/>a=b+i*c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="194"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i_add(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)+I*(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="199"><highlight class="comment">*<sp/>a=b-i*c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="200"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i_sub(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)-I*(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="205"><highlight class="comment">*<sp/>a+=b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="206"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_add_assign(a,b)<sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="211"><highlight class="comment">*<sp/>a-=b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="212"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_sub_assign(a,b)<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/>(a)-=(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="217"><highlight class="comment">*<sp/>a+=(b+c^*)<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="218"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_add_star_assign(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=(b)+conj(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="223"><highlight class="comment">*<sp/>a+=i*b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="224"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i_add_assign(a,b)<sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=I*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="229"><highlight class="comment">*<sp/>a-=i*b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="230"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i_sub_assign(a,b)<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/>(a)-=I*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="235"><highlight class="comment">*<sp/>a+=b*c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="236"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul_assign(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=(b)*(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="241"><highlight class="comment">*<sp/>a+=r*b*c<sp/>(a,b,c<sp/>complex,<sp/>r<sp/>real)</highlight></codeline>
<codeline lineno="242"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mulcr_assign(a,r,b,c)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/>(a)+=(r)*(b)*(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="247"><highlight class="comment">*<sp/>a=b*(c^+)<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="248"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul_star(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)*conj(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="253"><highlight class="comment">*<sp/>a+=b*(c^+)<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="254"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul_star_assign(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=(b)*conj(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="259"><highlight class="comment">*<sp/>a+=Re[<sp/>b*(c^+)<sp/>]<sp/>(a<sp/>real<sp/>;b,c<sp/>complex)</highlight></codeline>
<codeline lineno="260"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul_star_assign_re(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=creal((b)*conj(c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="265"><highlight class="comment">*<sp/>a-=b*c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="266"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul_sub_assign(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/>(a)-=(b)*(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="271"><highlight class="comment">*<sp/>a+=r*b<sp/>(a,b<sp/>complex;<sp/>r<sp/>real)</highlight></codeline>
<codeline lineno="272"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mulr_assign(a,r,b)<sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=(r)*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="277"><highlight class="comment">*<sp/>a=r1*c1+r2*c2<sp/>(a,c1,c2<sp/>complex;<sp/>r1,r2<sp/>real)</highlight></codeline>
<codeline lineno="278"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_rlc(a,r1,c1,r2,c2)<sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(a)=(r1)*(c1)+(r2)*(c2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="283"><highlight class="comment">*<sp/>a+=r1*c1+r2*c2<sp/>(a,c1,c2<sp/>complex;<sp/>r1,r2<sp/>real)</highlight></codeline>
<codeline lineno="284"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_rlc_assign(a,r1,c1,r2,c2)<sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(a)+=(r1)*(c1)+(r2)*(c2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="289"><highlight class="comment">*<sp/>a=z1*c1+z2*c2<sp/>(a,z1,c1,z2,c2<sp/>complex)</highlight></codeline>
<codeline lineno="290"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_clc(a,z1,c1,z2,c2)<sp/>\</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(a)=(z1)*(c1)+(z2)*(c2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="295"><highlight class="comment">*<sp/>a+=z1*c1+z2*c2<sp/>(a,z1,c1,z2,c2<sp/>complex)</highlight></codeline>
<codeline lineno="296"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_clc_assign(a,z1,c1,z2,c2)<sp/>\</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(a)+=(z1)*(c1)+(z2)*(c2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/cpu_complex.h"/>
  </compounddef>
</doxygen>
