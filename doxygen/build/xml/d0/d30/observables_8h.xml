<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d0/d30/observables_8h" kind="file" language="C++">
    <compoundname>observables.h</compoundname>
    <includes refid="d1/d36/suN_8h" local="yes">suN.h</includes>
    <includes refid="d3/d5d/inverters_8h" local="yes">inverters.h</includes>
    <includes refid="d2/d99/meson__observables_8h" local="yes">meson_observables.h</includes>
    <includes refid="d1/d74/hr__complex_8h" local="yes">hr_complex.h</includes>
    <includes refid="d5/d2b/data__storage_8h" local="yes">data_storage.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="10">
        <label>hr_omp.h</label>
        <link refid="d6/da7/hr__omp_8h_source"/>
      </node>
      <node id="13">
        <label>meson_observables.h</label>
        <link refid="d2/d99/meson__observables_8h_source"/>
      </node>
      <node id="8">
        <label>spinor_field.h</label>
        <link refid="d3/ded/spinor__field_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cpu_complex.h</label>
        <link refid="d2/dfb/cpu__complex_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>observables.h</label>
        <link refid="d0/d30/observables_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>suN_types.h</label>
        <link refid="d9/d21/suN__types_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>error.h</label>
        <link refid="da/d41/error_8h_source"/>
      </node>
      <node id="12">
        <label>field_ordering.h</label>
        <link refid="da/dac/field__ordering_8h_source"/>
      </node>
      <node id="4">
        <label>hr_complex.h</label>
        <link refid="d1/d74/hr__complex_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>tgmath.h</label>
      </node>
      <node id="2">
        <label>suN.h</label>
        <link refid="d1/d36/suN_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>geometry.h</label>
        <link refid="d4/d67/geometry_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>data_storage.h</label>
        <link refid="d5/d2b/data__storage_8h_source"/>
      </node>
      <node id="15">
        <label>stdio.h</label>
      </node>
      <node id="7">
        <label>inverters.h</label>
        <link refid="d3/d5d/inverters_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="d6/d23/struct__ata__qprop__pars" prot="public">_ata_qprop_pars</innerclass>
    <innerclass refid="da/dc2/structchisf__mem" prot="public">chisf_mem</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="d0/d30/observables_8h_1a000e8a321df0811cfc6b2affeadfaa51" prot="public" static="no">
        <name>SPIN_2D_INDEX</name>
        <param><defname>i</defname></param>
        <param><defname>j</defname></param>
        <initializer>((i)*4 + (j))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="24" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d30/observables_8h_1a740f009076cf7a2f4d6043bcad967f80" prot="public" static="no">
        <name>_WL_3VOL_INDEX</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>((x) + (y)*X + (z)*X * Y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="224" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="d0/d30/observables_8h_1aef0c559ec47f7a5830d00e2806de7e32" prot="public" static="no" strong="no">
        <type></type>
        <name>dilution_mode</name>
        <enumvalue id="d0/d30/observables_8h_1aef0c559ec47f7a5830d00e2806de7e32a3b8cbf3a7a845f76ebca696380782545" prot="public">
          <name>NO_DILUTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d0/d30/observables_8h_1aef0c559ec47f7a5830d00e2806de7e32a0839b6ccf17142f3d2f72c9f69410ace" prot="public">
          <name>TIME_DILUTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d0/d30/observables_8h_1aef0c559ec47f7a5830d00e2806de7e32a8e9b2b5a8dfb720c782d56101aae9f98" prot="public">
          <name>TIME_SPIN_DILUTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d0/d30/observables_8h_1aef0c559ec47f7a5830d00e2806de7e32a813410fb97d25f0c3798f18fef6a394c" prot="public">
          <name>EXACT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="54" column="1" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" bodystart="55" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d0/d30/observables_8h_1ad78ba44c26246df6a1d128d61b2e1a07" prot="public" static="no">
        <type>struct <ref refid="d6/d23/struct__ata__qprop__pars" kindref="compound">_ata_qprop_pars</ref></type>
        <definition>typedef struct _ata_qprop_pars ata_qprop_pars</definition>
        <argsstring></argsstring>
        <name>ata_qprop_pars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="77" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/d30/observables_8h_1ace2ccab0dc120184efd204f35b1f3a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double plaq</definition>
        <argsstring>(int ix, int mu, int nu)</argsstring>
        <name>plaq</name>
        <param>
          <type>int</type>
          <declname>ix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="26" column="8" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="26" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a242b4c6b58489270e1889bfe68efb413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cplaq</definition>
        <argsstring>(double complex *ret, int ix, int mu, int nu)</argsstring>
        <name>cplaq</name>
        <param>
          <type>double complex *</type>
          <declname>ret</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="27" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="27" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aa27bbec49bbebf5ff92558051f1b15b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double avr_plaquette</definition>
        <argsstring>()</argsstring>
        <name>avr_plaquette</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="28" column="8" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="28" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a598e27c2ebf2669b5918fc852750659c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double avr_plaquette_time</definition>
        <argsstring>(double *plaqt, double *plaqs)</argsstring>
        <name>avr_plaquette_time</name>
        <param>
          <type>double *</type>
          <declname>plaqt</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>plaqs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="29" column="8" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="29" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a95d6aeebf0e8233dd44274c1ce96b2a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SF_action</definition>
        <argsstring>(double beta)</argsstring>
        <name>SF_action</name>
        <param>
          <type>double</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="30" column="8" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="30" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a28d612758211ab40d80f72fe6799924a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double local_plaq</definition>
        <argsstring>(int ix)</argsstring>
        <name>local_plaq</name>
        <param>
          <type>int</type>
          <declname>ix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="31" column="8" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="31" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a43b96009fdb6c509aa13b6823e5c5b85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void full_plaquette</definition>
        <argsstring>()</argsstring>
        <name>full_plaquette</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="32" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="32" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aa30cc213f5c66adc6b26141e972f54f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void avr_ts_plaquette</definition>
        <argsstring>()</argsstring>
        <name>avr_ts_plaquette</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="34" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="34" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a8d8c76f14963ebbf802e34fcc68b60a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cplaq_wrk</definition>
        <argsstring>(double complex *ret, int ix, int mu, int nu)</argsstring>
        <name>cplaq_wrk</name>
        <param>
          <type>double complex *</type>
          <declname>ret</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="36" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="36" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a346868ba632cafb84468d51997643a27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double complex</type>
        <definition>double complex avr_plaquette_wrk</definition>
        <argsstring>()</argsstring>
        <name>avr_plaquette_wrk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="37" column="16" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="37" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a9095b9b9fec2d340a18de9b0f2314fa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rect_1x2</definition>
        <argsstring>(int ix, int mu, int nu)</argsstring>
        <name>rect_1x2</name>
        <param>
          <type>int</type>
          <declname>ix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="39" column="8" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="39" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a193fde1658a546f03e1ad9afe78ee1d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void crect_1x2</definition>
        <argsstring>(double complex *ret, int ix, int mu, int nu)</argsstring>
        <name>crect_1x2</name>
        <param>
          <type>double complex *</type>
          <declname>ret</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="40" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="40" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a1e83297d610ec73f6a2f9330e13d2657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double avr_rect_1x2</definition>
        <argsstring>()</argsstring>
        <name>avr_rect_1x2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="41" column="8" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="41" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ab9f6bbee0bed5b05771916a70ec5659a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void full_rect_1x2</definition>
        <argsstring>()</argsstring>
        <name>full_rect_1x2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="42" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a26b030081901e5b2227ca37ea0bd31af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double local_rect_1x2</definition>
        <argsstring>(int ix)</argsstring>
        <name>local_rect_1x2</name>
        <param>
          <type>int</type>
          <declname>ix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="43" column="8" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="43" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1abae28a3cf3a2d6d0d8668259efb283c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d0/d6e/struct__data__storage__array" kindref="compound">data_storage_array</ref> *</type>
        <definition>data_storage_array* SF_PCAC_wall_corr</definition>
        <argsstring>(double mass, double acc, storage_switch swh)</argsstring>
        <name>SF_PCAC_wall_corr</name>
        <param>
          <type>double</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc</declname>
        </param>
        <param>
          <type>storage_switch</type>
          <declname>swh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="45" column="20" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="45" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a2cdf598e291358de5349368e97885776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SF_quark_propagator</definition>
        <argsstring>(spinor_field *in, double mass, spinor_field *out, double acc)</argsstring>
        <name>SF_quark_propagator</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mass</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="46" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="46" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1af49eff25c89c77fda7d80345abba68ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void polyakov</definition>
        <argsstring>()</argsstring>
        <name>polyakov</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="48" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="48" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a96016ea08b3d6324055a558f1031770f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pta_qprop_QMR_eo</definition>
        <argsstring>(int g0[4], spinor_field **pta_qprop, int nm, double *m, double acc)</argsstring>
        <name>pta_qprop_QMR_eo</name>
        <param>
          <type>int</type>
          <declname>g0</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> **</type>
          <declname>pta_qprop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="50" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ade2556b486497fff46eae39e768db032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pta_qprop_QMR</definition>
        <argsstring>(int g0[4], spinor_field **pta_qprop, int nm, double *m, double acc)</argsstring>
        <name>pta_qprop_QMR</name>
        <param>
          <type>int</type>
          <declname>g0</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> **</type>
          <declname>pta_qprop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="51" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a4aa302dc4cc744b8683d46b420f5e882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pta_qprop_MINRES</definition>
        <argsstring>(int g0[4], spinor_field **pta_qprop, int nm, double *m, double acc)</argsstring>
        <name>pta_qprop_MINRES</name>
        <param>
          <type>int</type>
          <declname>g0</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> **</type>
          <declname>pta_qprop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="52" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a01ba224ff7fd67da157f94b7cd53985b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void traced_ata_qprop</definition>
        <argsstring>(double complex ***prop, int n_points)</argsstring>
        <name>traced_ata_qprop</name>
        <param>
          <type>double complex ***</type>
          <declname>prop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="79" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="79" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ad6c48ff6d2abf6e1309132f6c713a998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ata_qprop_init</definition>
        <argsstring>(ata_qprop_pars *p)</argsstring>
        <name>ata_qprop_init</name>
        <param>
          <type><ref refid="d6/d23/struct__ata__qprop__pars" kindref="compound">ata_qprop_pars</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="80" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a17fbcb192d38eefa81d08e86b93b38a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ata_qprop_free</definition>
        <argsstring>()</argsstring>
        <name>ata_qprop_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="81" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a50f116d9b75a914ba2fdcd82c9f3a8b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void z2semwall_qprop_free</definition>
        <argsstring>()</argsstring>
        <name>z2semwall_qprop_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="83" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="83" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1afee62c7b08b6c727841ee6668a794172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void z2semwall_mesons</definition>
        <argsstring>(int conf, int nhits, int nm, double *m, double acc)</argsstring>
        <name>z2semwall_mesons</name>
        <param>
          <type>int</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nhits</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="84" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="84" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a516565e4884e2c0173fb648f18c49eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void z2semwall_qprop_free_new</definition>
        <argsstring>()</argsstring>
        <name>z2semwall_qprop_free_new</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="86" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="86" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a6a0ad2c556cdb984e1bb739db1370de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void z2semwall_mesons_new</definition>
        <argsstring>(int conf, int nhits, int nm, double *m, double acc)</argsstring>
        <name>z2semwall_mesons_new</name>
        <param>
          <type>int</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nhits</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="87" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="87" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ac74f57cda6a2ccd52c7e99d191158e74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_point_source</definition>
        <argsstring>(spinor_field *source, int tau, int color)</argsstring>
        <name>create_point_source</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="89" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="89" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a0b9a6c2eec5a68360f7ce168256dde42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_full_point_source</definition>
        <argsstring>(spinor_field *source, int tau)</argsstring>
        <name>create_full_point_source</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="90" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="90" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1af3a5cbed434f72a2f1559f89f59cc335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_point_source_loc</definition>
        <argsstring>(spinor_field *source, int t, int x, int y, int z, int color)</argsstring>
        <name>create_point_source_loc</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z</declname>
        </param>
        <param>
          <type>int</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="91" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a2a341c1925c3639e1393536346e36ac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int create_diluted_source_equal_eo</definition>
        <argsstring>(spinor_field *source)</argsstring>
        <name>create_diluted_source_equal_eo</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="92" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="92" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a6e3925998252bd233370eeec4be9cc4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_diluted_source_equal_atau_eo</definition>
        <argsstring>(spinor_field *source, int tau)</argsstring>
        <name>create_diluted_source_equal_atau_eo</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="93" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="93" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a7ad4b4d387443a924a1c8d71d5067732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int create_diluted_source_equal</definition>
        <argsstring>(spinor_field *source)</argsstring>
        <name>create_diluted_source_equal</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="94" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="94" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aa90f8734e6b80f415a46d1041599328c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_diluted_source_equal_spinorfield1</definition>
        <argsstring>(spinor_field *source, int tau)</argsstring>
        <name>create_diluted_source_equal_spinorfield1</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="95" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="95" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a2dc4df68b82bbff8b6b1ebccebd4cde9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_diluted_source_equal_atau</definition>
        <argsstring>(spinor_field *source, int tau)</argsstring>
        <name>create_diluted_source_equal_atau</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="96" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="96" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a52b31fbd7fb7ce8e444f67b46c3e210d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_noise_source_equal_eo</definition>
        <argsstring>(spinor_field *source)</argsstring>
        <name>create_noise_source_equal_eo</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="97" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="97" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a54f38777b181876db31d39de0a01b844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_noise_source_equal_oe</definition>
        <argsstring>(spinor_field *source)</argsstring>
        <name>create_noise_source_equal_oe</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="98" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="98" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a11d94d986f3dec67a719f3fd9cc604d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_diluted_source_equal_atau_col</definition>
        <argsstring>(spinor_field *source, int tau, int col)</argsstring>
        <name>create_diluted_source_equal_atau_col</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="99" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aad505ee97aa613e62247a8f9f026610b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_noise_source_equal_col_dil</definition>
        <argsstring>(spinor_field *source, int col)</argsstring>
        <name>create_noise_source_equal_col_dil</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="100" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="100" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a4d3c00967f7b73f9d649b174d144e3a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_gauge_fixed_wall_source</definition>
        <argsstring>(spinor_field *source, int tau, int color)</argsstring>
        <name>create_gauge_fixed_wall_source</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="101" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="101" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ac7d7b85322acbcb8af3f423967109e24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_gauge_fixed_momentum_source</definition>
        <argsstring>(spinor_field *source, int pt, int px, int py, int pz, int color)</argsstring>
        <name>create_gauge_fixed_momentum_source</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>px</declname>
        </param>
        <param>
          <type>int</type>
          <declname>py</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="102" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aa2829f4797eff5062cb07a2b11bee14e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_sequential_source</definition>
        <argsstring>(spinor_field *source, int tf, spinor_field *prop)</argsstring>
        <name>create_sequential_source</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tf</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="103" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="103" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1af490a9cddd064beac4f966ed534e502a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_sequential_source_stoch</definition>
        <argsstring>(spinor_field *source, int tf, spinor_field *prop)</argsstring>
        <name>create_sequential_source_stoch</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tf</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="104" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a6ea5c4cc9c75dacaed34c6e0febe0e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void restrict_timeslice</definition>
        <argsstring>(spinor_field *source, int tf, spinor_field *prop)</argsstring>
        <name>restrict_timeslice</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tf</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="105" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="105" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aa3fc2149953a7c717ef36449cffff38c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_diluted_volume_source</definition>
        <argsstring>(spinor_field *source, int parity_component, int mod)</argsstring>
        <name>create_diluted_volume_source</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>parity_component</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="106" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="106" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1af5748bb7d9dc91d812c420fb69eb0320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void create_z2_volume_source</definition>
        <argsstring>(spinor_field *source)</argsstring>
        <name>create_z2_volume_source</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="107" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="107" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a72ae555a6479ac41ff335240bbf434e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add_momentum</definition>
        <argsstring>(spinor_field *out, spinor_field *in, int px, int py, int pz)</argsstring>
        <name>add_momentum</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>px</declname>
        </param>
        <param>
          <type>int</type>
          <declname>py</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="108" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="108" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aafed310480ec0cc459c5f03837e2c487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zero_even_or_odd_site_spinorfield</definition>
        <argsstring>(spinor_field *source, int nspinor, int eo)</argsstring>
        <name>zero_even_or_odd_site_spinorfield</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nspinor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="109" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="109" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a3df1df1a68841d0e895d0bc6437ad423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_propagator_eo</definition>
        <argsstring>(int nm, double *m, double acc)</argsstring>
        <name>init_propagator_eo</name>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="111" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="111" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ae332aeb808ba4845f447accb068a5957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eig_init</definition>
        <argsstring>(int nev, int nevt, int kmax, int maxiter, double lbnd, double omega1, double omega2)</argsstring>
        <name>eig_init</name>
        <param>
          <type>int</type>
          <declname>nev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nevt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxiter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>lbnd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>omega1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>omega2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="112" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="112" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a619db804a3812fe0a9523979923e81db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_propagator_eo</definition>
        <argsstring>()</argsstring>
        <name>free_propagator_eo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="113" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="113" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a9becf68bbc12a377cccc35659c4c8f78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calc_propagator_eo</definition>
        <argsstring>(spinor_field *psi, spinor_field *eta, int ndilute)</argsstring>
        <name>calc_propagator_eo</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="114" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="114" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a327ba93d107b90157f637a0eb6132cdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calc_propagator</definition>
        <argsstring>(spinor_field *psi, spinor_field *eta, int ndilute)</argsstring>
        <name>calc_propagator</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="115" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a83da3eb0e857c504ab3d558b950c7452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calc_propagator_tw</definition>
        <argsstring>(double *m, double mu, spinor_field *psi, spinor_field *eta, int ndilute)</argsstring>
        <name>calc_propagator_tw</name>
        <param>
          <type>double *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="117" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="117" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a877928ba63bdd8b1bb4d0ef82e8a069b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calc_propagator_multisource</definition>
        <argsstring>(spinor_field *psi, spinor_field *eta, int ndilute)</argsstring>
        <name>calc_propagator_multisource</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="119" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="119" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aab85672b0e1b1bb2bddc85f8bc92330f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calc_deflated_propagator</definition>
        <argsstring>(spinor_field *psi, spinor_field *eta, int ndilute, int Nuse)</argsstring>
        <name>calc_deflated_propagator</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nuse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="120" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="120" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ac7a155888c3a5597e0784ed844ffcde9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void copy_evec</definition>
        <argsstring>(int n, spinor_field *psi1, double *eval)</argsstring>
        <name>copy_evec</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>eval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="121" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a2c4825a6e087380184eada9fa707d339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_meson_correlators</definition>
        <argsstring>(int meas_offdiag)</argsstring>
        <name>init_meson_correlators</name>
        <param>
          <type>int</type>
          <declname>meas_offdiag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="123" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="123" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1af107e1946cac28ac11ec1ad2d447ed72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_discon_correlators</definition>
        <argsstring>()</argsstring>
        <name>init_discon_correlators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="124" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aa4ba6461c61b4941f7f251f78b9f6ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_vcvl_correlators</definition>
        <argsstring>()</argsstring>
        <name>init_vcvl_correlators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="125" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="125" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a248a96580483da7d670edfb1d4a33bb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_cvc_correlators</definition>
        <argsstring>()</argsstring>
        <name>init_cvc_correlators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="126" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="126" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a050702daf9b71eb0c2fbda780bdaff94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_meson_observables</definition>
        <argsstring>()</argsstring>
        <name>free_meson_observables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="127" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="127" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a880a2e0e49c5d1fdf19b402b6957bade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_triplet_discon_observables</definition>
        <argsstring>()</argsstring>
        <name>free_triplet_discon_observables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="128" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="128" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a1b01b0e0367769c0a06ce5622782b4ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_mesons_core</definition>
        <argsstring>(spinor_field *psi0, spinor_field *psi1, spinor_field *eta, meson_observable *mo, int nm, int tau, int n_mom, int offset, int lt)</argsstring>
        <name>measure_mesons_core</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi1</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_mom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="130" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="130" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a339f73694f0796349b1fa0b9c00aa394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_mesons</definition>
        <argsstring>(meson_observable *mo, spinor_field *psi0, spinor_field *eta, int nm, int tau)</argsstring>
        <name>measure_mesons</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="132" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a474a38290d2c87048585f793637d1143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_diquarks</definition>
        <argsstring>(meson_observable *mo, spinor_field *psi0, spinor_field *psi1, spinor_field *eta, int nm, int tau)</argsstring>
        <name>measure_diquarks</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi1</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="133" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="133" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a25e6a77b1806ec1892d2665c2edea29d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_conserved_currents</definition>
        <argsstring>(meson_observable *mo, spinor_field *psi0, spinor_field *eta, int nm, int tau)</argsstring>
        <name>measure_conserved_currents</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="134" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="134" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a3beb34709bf240aebd875cd3d56a27b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_mesons_ext</definition>
        <argsstring>(meson_observable *mo, spinor_field *psi0, spinor_field *eta, int nm, int tau, int begin)</argsstring>
        <name>measure_mesons_ext</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>begin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="135" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="135" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1af338d3136470e464cf758ec1907d98a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_point_mesons_momenta</definition>
        <argsstring>(meson_observable *mo, spinor_field *psi0, spinor_field *eta, int nm, int tau, int n_mom)</argsstring>
        <name>measure_point_mesons_momenta</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_mom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="136" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="136" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1afa0572e1e38eadba28da02a914a28b9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_point_mesons_momenta_ext</definition>
        <argsstring>(meson_observable *mo, spinor_field *psi0, spinor_field *eta, int nm, int tau, int n_mom, int begin)</argsstring>
        <name>measure_point_mesons_momenta_ext</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_mom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>begin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="137" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="137" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ab32ce22b9c3ed6a5a7c31214f8f63154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_formfactors</definition>
        <argsstring>(spinor_field *psi0, spinor_field *psi1, spinor_field *eta, int nm, int ti, int tf, int n_mom, int *pt)</argsstring>
        <name>measure_formfactors</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi1</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ti</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_mom</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="138" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="138" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a944844a0d5476d3b96fd575d8366dca0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_formfactors_ext</definition>
        <argsstring>(spinor_field *psi0, spinor_field *psi1, spinor_field *eta, int nm, int ti, int tf, int n_mom, int begin)</argsstring>
        <name>measure_formfactors_ext</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi1</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ti</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_mom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>begin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="139" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="139" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a07fd5ac1ec0fdf0d44a97e92a52c2dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_mesons</definition>
        <argsstring>(meson_observable *mo, double norm, int conf, int nm, double *mass, int lt, int n_mom, char *label)</argsstring>
        <name>print_mesons</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type>double</type>
          <declname>norm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_mom</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="141" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="141" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a663c9316de24b16184a8d3f6acc9c45a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_formfactor</definition>
        <argsstring>(int conf, int nm, double *mass, int n_mom, char *label, int tf)</argsstring>
        <name>print_formfactor</name>
        <param>
          <type>int</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_mom</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="142" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="142" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1abc5f1b1b0b8c6cec23375c0c5bf48649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_formfactor_ext</definition>
        <argsstring>(int conf, int nm, double *mass, int n_mom, char *label, int tf)</argsstring>
        <name>print_formfactor_ext</name>
        <param>
          <type>int</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_mom</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="143" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="143" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a6683fb30f181bff671ab954fa054c693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_scattering_AD_core</definition>
        <argsstring>(meson_observable *mo, spinor_field *psi0, spinor_field *psi1, spinor_field *psi2, spinor_field *psi3, int tau, int split, int n_mom, int p_tot_x, int p_tot_y, int p_tot_z)</argsstring>
        <name>measure_scattering_AD_core</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi1</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi2</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi3</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>split</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_mom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_tot_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_tot_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_tot_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="145" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="145" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a427c48993d87511607b0455f8394a7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_scattering_BC_core</definition>
        <argsstring>(meson_observable *mo, spinor_field *psi0, spinor_field *psi1, spinor_field *psi2, spinor_field *psi3, int tau, int split, int n_mom, int p_tot_x, int p_tot_y, int p_tot_z)</argsstring>
        <name>measure_scattering_BC_core</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi1</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi2</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi3</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>split</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_mom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_tot_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_tot_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_tot_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="146" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="146" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a3678fb99aeb221eb11b20d7baaedf6d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_renormalization</definition>
        <argsstring>(spinor_field *psi_in, spinor_field *psi_out, int nm, int pt_in, int px_in, int py_in, int pz_in, int pt_out, int px_out, int py_out, int pz_out)</argsstring>
        <name>measure_renormalization</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi_in</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pt_in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>px_in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>py_in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pz_in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pt_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>px_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>py_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pz_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="148" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="148" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a56201f9a768b36ad25f0f7245391857e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_renormalization</definition>
        <argsstring>(int conf, int nm, double *mass, char *label, int pt_in, int px_in, int py_in, int pz_in, int pt_out, int px_out, int py_out, int pz_out)</argsstring>
        <name>print_renormalization</name>
        <param>
          <type>int</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pt_in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>px_in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>py_in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pz_in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pt_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>px_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>py_out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pz_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="149" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="149" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a85159e4578ced184e43c7ffb43a9ac33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void contract_baryons</definition>
        <argsstring>(spinor_field *psi0, int tau, storage_switch swc, data_storage_array **ret)</argsstring>
        <name>contract_baryons</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>storage_switch</type>
          <declname>swc</declname>
        </param>
        <param>
          <type><ref refid="d0/d6e/struct__data__storage__array" kindref="compound">data_storage_array</ref> **</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="151" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="151" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a4936dd9dd7d6eb1bf9ebe39668a6e862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_glueballs</definition>
        <argsstring>()</argsstring>
        <name>measure_glueballs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="152" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="152" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a5eed23de77e24b2ecbfff3bd37b9cc20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void id_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>id_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="154" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="154" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a660d7482a1449367c512dcb51095deaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g0_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="155" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="155" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1afab6285a5f389c217de3d121e27ff137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g5_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="156" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="156" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a2fb83402cd1ce1c697e498d45ae11174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g0g5_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="157" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="157" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1adabdda5071882e80974595eb58f73297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g1_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g1_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="158" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="158" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a185d9ef19cca37a47119b05add4cc54e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g2_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g2_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="159" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="159" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a8d5d15831281564fdc87b61226829729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g3_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g3_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="160" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="160" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1adcca5969500a82c196b8ef9d13ca1234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g1_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g0g1_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="161" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="161" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a7a3cd85f3d2c5f90d0bb3c1133b09570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g2_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g0g2_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="162" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="162" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ad5b68ac480366c67fa679c9c30d1e52a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g3_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g0g3_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="163" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="163" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a2e0551e737e57f94f5760424e852568e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5g1_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g5g1_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="164" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="164" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a88880deaed53beebf4a67b2c8579b5b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5g2_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g5g2_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="165" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="165" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ac3d1db4db5189484794cf43d221d87bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5g3_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g5g3_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="166" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="166" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a4a341f6efb160f1a1bcfb14a9efad4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5g1_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g0g5g1_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="167" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="167" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a8e49be25234393f740dc192bcd146178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5g2_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g0g5g2_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="168" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="168" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ab239906119e27489854a6c080cd6487b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5g3_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g0g5g3_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="169" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="169" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1affe82b8a5286aef07fcd31ca7e92a8b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5_g0g5_re_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g5_g0g5_re_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="170" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="170" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a6589c957d434cb88dab82e1dc968b768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5_g0g5_im_correlator</definition>
        <argsstring>(double *out, int t0, spinor_field *qp)</argsstring>
        <name>g5_g0g5_im_correlator</name>
        <param>
          <type>double *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>qp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="171" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="171" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a55feaea725e768eca5f5562f877f6159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void id_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>id_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="173" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="173" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a97a804aeda5c9d4a400be8a7743608f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g0_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="174" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="174" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a11dacc78b68d9e3ef7d1d521c3ac8e70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g5_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="175" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="175" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a0644a02514633710acb9edfd56371241" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g0g5_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="176" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="176" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a3794271312d4c183fac332ade1c25ab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g1_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g1_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="177" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="177" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a811848a2718eb0259cfe3d755f229c4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g2_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g2_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="178" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="178" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ae5d7f7f30330564a05839913ac87eabb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g3_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g3_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="179" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="179" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a320b2793381a183cba275a07a520f29a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g1_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g0g1_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="180" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="180" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a76445805f7587aa3fb44803cb15631f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g2_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g0g2_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="181" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="181" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a91a9e6f08d9ee64a733697b1a28fe2e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g3_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g0g3_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="182" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="182" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a0fc08ceae965ea806bd9e950711d1e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5g1_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g5g1_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="183" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="183" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a9fc32b56f1181b481c0882fad2964535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5g2_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g5g2_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="184" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="184" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aefd141fdb230381880daf04d2a049047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5g3_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g5g3_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="185" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="185" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a19e54bc02c5271682fce8deb3fd7a694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5g1_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g0g5g1_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="186" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="186" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aeacf4bf9921e4a92c3ff22f6bc26dc48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5g2_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g0g5g2_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="187" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="187" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a7aaefa5ae4a93995262a59cb6a673e88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5g3_trace_H</definition>
        <argsstring>(double complex *out, double complex *smat)</argsstring>
        <name>g0g5g3_trace_H</name>
        <param>
          <type>double complex *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double complex *</type>
          <declname>smat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="188" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="188" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a797a54f998767dc6dbd20bb8d34b0ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void id_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>id_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="190" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="190" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a03729da478a138bbe0bfe195f53c3399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g0_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="191" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="191" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1afc9b82a02d673f27f238471ca5807247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g5_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="192" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="192" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a35c9a3a0faadf1388cc4420f76f3a83a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g0g5_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="193" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="193" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aab8cad8111578aab61763a54e1bb7895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g1_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g1_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="194" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="194" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aa5cc30a6378452c3247f518b15b1330f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g2_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g2_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="195" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="195" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a21d2745d7a628fd34412211d59a22e06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g3_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g3_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="196" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="196" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a5145a50502dda429ef29b3723274d909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g1_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g0g1_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="197" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="197" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a506ef86006a3b82d66f264cb357ce2a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g2_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g0g2_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="198" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="198" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1adf26d8359b6f91e5f6131e8093effe3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g3_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g0g3_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="199" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="199" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a34486dc4c8346d7a5648e9aa4143e1c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5g1_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g5g1_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="200" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="200" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a715cc4fe5e84cc0af5c4e256ff543b8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5g2_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g5g2_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="201" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="201" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a04631195e425993bc350211663419ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5g3_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g5g3_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="202" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="202" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a0199221218a522937421490d44c07a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5g1_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g0g5g1_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="203" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="203" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a6c4fc3b607b10d64baa4d58ad1d5272f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5g2_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g0g5g2_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="204" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="204" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a7a0eef604ba176baf214785b40550102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5g3_debug</definition>
        <argsstring>(double complex Gamma[4][4], int *sign)</argsstring>
        <name>g0g5g3_debug</name>
        <param>
          <type>double complex</type>
          <declname>Gamma</declname>
          <array>[4][4]</array>
        </param>
        <param>
          <type>int *</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="205" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="205" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a28b23a7b432bf16895b435e9442d22b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void id_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>id_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="207" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="207" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a9363d971be352e19c3bb974262806e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g0_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="208" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="208" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a16ba123612de5d33dc5b91d06a58645c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g1_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g1_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="209" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="209" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a1ee47008ddb8b13b060159237038fd08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g2_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g2_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="210" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="210" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a83debcfd1194eddfe0f0a337521cd8bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g3_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g3_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="211" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="211" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a4d5f9c163058efdedb14c1812e4ffa29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g5_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="212" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="212" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a43bde8011743e3b3d04b4f6ced367972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g0g5_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="213" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="213" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a476ea8786ddc45a15b14bd4e0d3fa645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5g1_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g5g1_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="214" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="214" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ac255f9a6c05c882874efeec8bea5ce89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5g2_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g5g2_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="215" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="215" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a54019fa28cfbe73145da9ff2aaa0e942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g5g3_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g5g3_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="216" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="216" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a1b28d6766c1ffaa8e35bbda489a26e93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g1_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g0g1_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="217" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="217" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a2f90220d560b8be6c36c42220dc04234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g2_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g0g2_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="218" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="218" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a6405524535a13a17a9a8b51d01a51526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g3_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g0g3_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="219" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="219" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ac7eb2fc72c09395a4730244cc28b3013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5g1_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g0g5g1_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="220" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="220" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aa524a384d23636537ff68743ba4538d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5g2_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g0g5g2_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="221" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="221" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a79008658d1cfaa7409de79ee2134eea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void g0g5g3_eval_g5GammaDag_times_spinor</definition>
        <argsstring>(suNf_spinor *out, suNf_spinor *in)</argsstring>
        <name>g0g5g3_eval_g5GammaDag_times_spinor</name>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="222" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="222" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a04a307c7719993d30f6050b9a05e0429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WL_initialize</definition>
        <argsstring>()</argsstring>
        <name>WL_initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="225" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="225" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ab7815f311635a070a2ae377b66f2fa57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WL_free</definition>
        <argsstring>()</argsstring>
        <name>WL_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="226" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="226" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a259afb3159bf521de93cf197bf748b88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WL_load_path</definition>
        <argsstring>(int c[3], int nsteps)</argsstring>
        <name>WL_load_path</name>
        <param>
          <type>int</type>
          <declname>c</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>int</type>
          <declname>nsteps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="227" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="227" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a1692297673bd07136a4d9a49c5f5b0a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WL_Hamiltonian_gauge</definition>
        <argsstring>(suNg_field *out, suNg_field *in)</argsstring>
        <name>WL_Hamiltonian_gauge</name>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="228" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="228" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ae3c1bf5fa400b9c34e6f42e27c6956b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WL_broadcast_polyakov</definition>
        <argsstring>(suNg *poly, suNg_field *gf)</argsstring>
        <name>WL_broadcast_polyakov</name>
        <param>
          <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>poly</declname>
        </param>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
          <declname>gf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="229" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="229" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a1dae10e72540120a05ca66e82b511a36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WL_correlators</definition>
        <argsstring>(double **ret, const suNg_field *gf, const suNg *poly, const int nsteps, const int *path, const int length, const int perm[3], int sign[3])</argsstring>
        <name>WL_correlators</name>
        <param>
          <type>double **</type>
          <declname>ret</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
          <declname>gf</declname>
        </param>
        <param>
          <type>const <ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>poly</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nsteps</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>perm</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>int</type>
          <declname>sign</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="230" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="230" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a41529e1b45324119c44a95338616c358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WL_wilsonloops</definition>
        <argsstring>(double HYP_weight[3])</argsstring>
        <name>WL_wilsonloops</name>
        <param>
          <type>double</type>
          <declname>HYP_weight</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="231" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="231" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a1958b7de8095354976681289c9248aa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_modenumber</definition>
        <argsstring>(double m, double inv, int nh, char *approxfile)</argsstring>
        <name>init_modenumber</name>
        <param>
          <type>double</type>
          <declname>m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>inv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nh</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>approxfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="233" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="233" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aae21937900a327c1daddf322432442ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_modenumber</definition>
        <argsstring>()</argsstring>
        <name>free_modenumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="234" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="234" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aa3d8f9d7e37e3ab32411d04dfa25c436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ModeNumber</definition>
        <argsstring>(double M2)</argsstring>
        <name>ModeNumber</name>
        <param>
          <type>double</type>
          <declname>M2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="235" column="8" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="235" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ac5c49fac88f1a9a89182bd76fa5b306d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
        <definition>chisf_mem* init_rotated_corr_mem</definition>
        <argsstring>()</argsstring>
        <name>init_rotated_corr_mem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="251" column="11" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="251" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a096ace3f28e80060a79cbfe37a8343e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gXuup</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gXuup</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="253" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="253" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a49f0f674801981f10ac760290c68b4ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gXddp</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gXddp</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="254" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="254" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1af4549a95221c1c2da2e020438b4a408e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gXudp</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gXudp</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="255" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="255" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1afc06e66044b4ca1af4e4c801b67e96e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gXdup</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gXdup</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="256" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="256" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aba9c356cc0f14782aec6dadc2e89116f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gvtuup</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gvtuup</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="257" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="257" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a891d737d3022df1dcc0ca52d9abb2ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gvtddp</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gvtddp</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="258" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="258" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a901ff75216963e12b0cf3f7cfe558ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gvtdup</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gvtdup</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="259" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="259" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1af7e0c8faf599b23e84c4f1efff9bfea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gvtudp</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gvtudp</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="260" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="260" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1acbe6be505e203682721f9f8dfb255bbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_g1uup</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_g1uup</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="261" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="261" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a4278c1682b0481051fff521814212424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_g1ddp</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_g1ddp</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="262" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="262" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a91f67f8feb8d25701918272aa55ea36c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_g1udp</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_g1udp</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="263" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="263" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aaa396cc0d64ad176fd19c60a6480b4ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_g1dup</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_g1dup</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="264" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="264" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a5b7e3230a96d1564adf7a0639e8b9c76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_lXuup</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_lXuup</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="265" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="265" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aa371a4e74e22a0621dfd9940793c026e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_lXddp</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_lXddp</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="266" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="266" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aa271c74a258a7baa37f1296a5be5d8cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_lXdup</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_lXdup</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="267" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="267" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1acdb0cbf1476d9b94a87767b955fa7ba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_lXudp</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_lXudp</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="268" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="268" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1add3d072e2776d29c692d4aa8793f32a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gXuum</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gXuum</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="269" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="269" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a22ca4308b8bece0809c27df54dadc0e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gXddm</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gXddm</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="270" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="270" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a7a79465b57728961892fde5b9b5d872b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gXudm</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gXudm</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="271" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="271" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a0f3a2f2d96bee492a3c0498175bcb174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gXdum</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gXdum</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="272" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="272" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ab8c08a66f59ce6311263e0940bec59f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gvtuum</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gvtuum</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="273" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="273" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a23a9e4a3346f8182919660954409686e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gvtddm</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gvtddm</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="274" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="274" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a119e1afb1d7a1065070eeb313290e50e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gvtdum</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gvtdum</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="275" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="275" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a1dbaef85c0b7cb1710f61543d73b1e74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_gvtudm</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_gvtudm</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="276" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="276" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ad17694570373bb8eb2ba13d8e1f62da3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_g1uum</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_g1uum</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="277" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="277" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1af71a9c7590af816bcd21c37e7b9fb819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_g1ddm</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_g1ddm</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="278" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="278" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a74ec46f78e8946486de7c69abd3e486d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_g1udm</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_g1udm</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="279" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="279" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ae0f6d2e7290b6fdb0d7da95798d4ce3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_g1dum</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_g1dum</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="280" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="280" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a2e2994e853be044b1c2b1aaadc75b76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_lXuum</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_lXuum</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="281" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="281" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ae1d7434f33f435ccc4eb01bd0bfa425b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_lXddm</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_lXddm</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="282" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="282" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a96e6bf335d05ce191158b754618956ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_lXudm</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_lXudm</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="283" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="283" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a0b7423d3adcca24e9a1222a329396b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotated_lXdum</definition>
        <argsstring>(chisf_mem *corr_mem, suNf_spinor *chi, spinor_field *prop_uu, spinor_field *prop_dd)</argsstring>
        <name>rotated_lXdum</name>
        <param>
          <type><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref> *</type>
          <declname>corr_mem</declname>
        </param>
        <param>
          <type><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref> *</type>
          <declname>chi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_uu</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop_dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="284" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="284" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a3ac6f33443d062bac1f066b129194794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_propagator_ff_eo</definition>
        <argsstring>(int nm, double *m, double acc)</argsstring>
        <name>init_propagator_ff_eo</name>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>acc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="287" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="287" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1aca0d54aaad5e28c09a5722698807d9b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_propagator_ff_eo</definition>
        <argsstring>()</argsstring>
        <name>free_propagator_ff_eo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="288" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="288" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a7c16cb54723f244399ec9eac65caf76a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calc_propagator_ff</definition>
        <argsstring>(spinor_field *psi, spinor_field *eta, int ndilute)</argsstring>
        <name>calc_propagator_ff</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="290" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="290" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a22707958068002dd1b5fc6999acf6e6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calc_propagator_ff_eo</definition>
        <argsstring>(spinor_field *psi, spinor_field *eta, int ndilute)</argsstring>
        <name>calc_propagator_ff_eo</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="291" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="291" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1ae0d18fc4d1b0b4b6fd4491d3ff34ad3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calc_propagator_ff_oe</definition>
        <argsstring>(spinor_field *psi, spinor_field *eta, int ndilute)</argsstring>
        <name>calc_propagator_ff_oe</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="292" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="292" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a55917fe6095d93f1e342bb9a1da9c1f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calc_propagator_ff_hopping_eo</definition>
        <argsstring>(spinor_field *psi, spinor_field *eta, int hopping, int ndilute)</argsstring>
        <name>calc_propagator_ff_hopping_eo</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hopping</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="293" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="293" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a9529ac974798bf8eae80eb6ff72a99ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calc_propagator_ff_hopping_oe</definition>
        <argsstring>(spinor_field *psi, spinor_field *eta, int hopping, int ndilute)</argsstring>
        <name>calc_propagator_ff_hopping_oe</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hopping</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="294" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="294" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1a26de2a17cc61f5baf5e368206ff59b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calc_propagator_ff_hopping_series</definition>
        <argsstring>(spinor_field *psi, spinor_field *eta, int hopping, int ndilute)</argsstring>
        <name>calc_propagator_ff_hopping_series</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>psi</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hopping</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="295" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="295" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1af4f4ce774522858786cb55a86d9e1d7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_triplet_discon_correlators</definition>
        <argsstring>()</argsstring>
        <name>init_triplet_discon_correlators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="298" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="298" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d30/observables_8h_1af7348beec63334bdcb7f902d2899358e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ff_observables</definition>
        <argsstring>()</argsstring>
        <name>ff_observables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" line="300" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h" declline="300" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************\</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>(c)<sp/>2008,<sp/>Claudio<sp/>Pica<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>All<sp/>rights<sp/>reserved.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">\***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>File<sp/>observables.h</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Functions<sp/>for<sp/>measuring<sp/>observables</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OBSERVABLES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OBSERVABLES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;suN.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;inverters.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;meson_observables.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hr_complex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;data_storage.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIN_2D_INDEX(i,<sp/>j)<sp/>((i)*4<sp/>+<sp/>(j))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>plaq(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mu,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nu);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cplaq(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*ret,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mu,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nu);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>avr_plaquette();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>avr_plaquette_time(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*plaqt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*plaqs);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SF_action(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>local_plaq(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>full_plaquette();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>avr_ts_plaquette();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cplaq_wrk(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*ret,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mu,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nu);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>avr_plaquette_wrk();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rect_1x2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mu,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nu);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>crect_1x2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*ret,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mu,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nu);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>avr_rect_1x2();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>full_rect_1x2();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>local_rect_1x2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="d0/d6e/struct__data__storage__array" kindref="compound">data_storage_array</ref><sp/>*SF_PCAC_wall_corr(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc,<sp/>storage_switch<sp/>swh);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SF_quark_propagator(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*in,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>polyakov();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pta_qprop_QMR_eo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g0[4],<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>**pta_qprop,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pta_qprop_QMR(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g0[4],<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>**pta_qprop,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pta_qprop_MINRES(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g0[4],<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>**pta_qprop,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>NO_DILUTION,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>TIME_DILUTION,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>TIME_SPIN_DILUTION,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>EXACT</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/>dilution_mode;</highlight></codeline>
<codeline lineno="61" refid="d6/d23/struct__ata__qprop__pars" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d6/d23/struct__ata__qprop__pars" kindref="compound">_ata_qprop_pars</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_masses;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass[256];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_eigenvalues;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eva_nevt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eva_omega1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eva_omega2;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eva_imax;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eva_kmax;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hopping_order;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_truncation_steps;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_sources_truncation;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_sources_correction;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>dilution_mode<sp/>dilution;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inverter_precision;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}<sp/><ref refid="d6/d23/struct__ata__qprop__pars" kindref="compound">ata_qprop_pars</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>traced_ata_qprop(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>***prop,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_points);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ata_qprop_init(<ref refid="d6/d23/struct__ata__qprop__pars" kindref="compound">ata_qprop_pars</ref><sp/>*p);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ata_qprop_free();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z2semwall_qprop_free();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z2semwall_mesons(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nhits,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z2semwall_qprop_free_new();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>z2semwall_mesons_new(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nhits,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_point_source(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_full_point_source(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_point_source_loc(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>create_diluted_source_equal_eo(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_diluted_source_equal_atau_eo(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>create_diluted_source_equal(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_diluted_source_equal_spinorfield1(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_diluted_source_equal_atau(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_noise_source_equal_eo(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_noise_source_equal_oe(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_diluted_source_equal_atau_col(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_noise_source_equal_col_dil(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_gauge_fixed_wall_source(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_gauge_fixed_momentum_source(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_sequential_source(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tf,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_sequential_source_stoch(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tf,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>restrict_timeslice(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tf,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_diluted_volume_source(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parity_component,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mod);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_z2_volume_source(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add_momentum(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*out,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pz);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>zero_even_or_odd_site_spinorfield(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nspinor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eo);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_propagator_eo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eig_init(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nevt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kmax,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxiter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lbnd,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega2);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_propagator_eo();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_propagator_eo(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_propagator(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_propagator_tw(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_propagator_multisource(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_deflated_propagator(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nuse);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copy_evec(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*eval);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_meson_correlators(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meas_offdiag);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_discon_correlators();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_vcvl_correlators();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_cvc_correlators();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_meson_observables();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_triplet_discon_observables();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_mesons_core(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi1,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*mo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lt);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_mesons(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*mo,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_diquarks(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*mo,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi1,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_conserved_currents(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*mo,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_mesons_ext(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*mo,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_point_mesons_momenta(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*mo,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mom);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_point_mesons_momenta_ext(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*mo,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_formfactors(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi1,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ti,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pt);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_formfactors_ext(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi1,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ti,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_mesons(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*mo,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*mass,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mom,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_formfactor(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*mass,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mom,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tf);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_formfactor_ext(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*mass,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mom,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tf);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_scattering_AD_core(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*mo,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi1,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi2,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>split,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_tot_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_tot_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_tot_z);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_scattering_BC_core(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*mo,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi1,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi2,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi3,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>split,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_mom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_tot_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_tot_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_tot_z);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_renormalization(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi_in,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pt_in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>px_in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py_in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pz_in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pt_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>px_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pz_out);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_renormalization(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*mass,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pt_in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>px_in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py_in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pz_in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pt_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>px_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pz_out);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>contract_baryons(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau,storage_switch<sp/>swc,<sp/><ref refid="d0/d6e/struct__data__storage__array" kindref="compound">data_storage_array</ref><sp/>**ret);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_glueballs();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>id_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g1_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g2_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g3_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g1_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g2_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g3_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5g1_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5g2_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5g3_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5g1_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5g2_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5g3_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5_g0g5_re_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5_g0g5_im_correlator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t0,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*qp);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>id_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g1_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g2_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g3_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g1_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g2_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g3_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5g1_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5g2_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5g3_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5g1_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5g2_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5g3_trace_H(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*smat);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>id_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g1_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g2_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g3_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g1_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g2_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g3_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5g1_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5g2_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5g3_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5g1_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5g2_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5g3_debug(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>Gamma[4][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sign);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>id_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g1_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g2_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g3_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5g1_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5g2_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g5g3_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g1_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g2_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g3_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5g1_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5g2_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>g0g5g3_eval_g5GammaDag_times_spinor(<ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*out,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*in);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_WL_3VOL_INDEX(x,<sp/>y,<sp/>z)<sp/>((x)<sp/>+<sp/>(y)*X<sp/>+<sp/>(z)*X<sp/>*<sp/>Y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WL_initialize();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WL_free();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WL_load_path(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c[3],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsteps);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WL_Hamiltonian_gauge(<ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*out,<sp/><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*in);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WL_broadcast_polyakov(<ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*poly,<sp/><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*gf);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WL_correlators(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**ret,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*gf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*poly,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsteps,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perm[3],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign[3]);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WL_wilsonloops(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>HYP_weight[3]);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_modenumber(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nh,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*approxfile);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_modenumber();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ModeNumber(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M2);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="da/dc2/structchisf__mem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>***g1_ij,<sp/>***g2_ij,<sp/>***g3_ij,<sp/>***g4_ij,<sp/>*g1,<sp/>*g2,<sp/>*g3,<sp/>*g4,<sp/>**M;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*l11,<sp/>*l12,<sp/>*l13;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*l21,<sp/>*l22,<sp/>*l23;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*l31,<sp/>*l32,<sp/>*l33;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>*l41,<sp/>*l42,<sp/>*l43;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>***l11_ij,<sp/>***l12_ij,<sp/>***l13_ij;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>***l21_ij,<sp/>***l22_ij,<sp/>***l23_ij;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>complex<sp/>***l31_ij,<sp/>***l32_ij,<sp/>***l33_ij;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}<sp/><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*init_rotated_corr_mem();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gXuup(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gXddp(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gXudp(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gXdup(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gvtuup(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gvtddp(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gvtdup(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gvtudp(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_g1uup(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_g1ddp(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_g1udp(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_g1dup(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_lXuup(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_lXddp(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_lXdup(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_lXudp(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gXuum(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gXddm(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gXudm(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gXdum(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gvtuum(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gvtddm(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gvtdum(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_gvtudm(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_g1uum(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_g1ddm(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_g1udm(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_g1dum(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_lXuum(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_lXddm(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_lXudm(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rotated_lXdum(<ref refid="da/dc2/structchisf__mem" kindref="compound">chisf_mem</ref><sp/>*corr_mem,<sp/><ref refid="d8/dd1/structsuNf__spinor" kindref="compound">suNf_spinor</ref><sp/>*chi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_uu,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*prop_dd);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Functions<sp/>that<sp/>include<sp/>four<sp/>fermion<sp/>interactions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_propagator_ff_eo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_propagator_ff_eo();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_propagator_ff(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_propagator_ff_eo(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_propagator_ff_oe(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_propagator_ff_hopping_eo(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hopping,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_propagator_ff_hopping_oe(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hopping,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_propagator_ff_hopping_series(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*psi,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*eta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hopping,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Disconnected<sp/>part<sp/>of<sp/>triplet<sp/>correlators<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_triplet_discon_correlators();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ff_observables();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/observables.h"/>
  </compounddef>
</doxygen>
