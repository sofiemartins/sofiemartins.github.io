<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="df/dc5/scattering_8h" kind="file" language="C++">
    <compoundname>scattering.h</compoundname>
    <includes refid="d1/d36/suN_8h" local="yes">suN.h</includes>
    <includes refid="d2/d99/meson__observables_8h" local="yes">meson_observables.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="7">
        <label>meson_observables.h</label>
        <link refid="d2/d99/meson__observables_8h_source"/>
      </node>
      <node id="5">
        <label>cpu_complex.h</label>
        <link refid="d2/dfb/cpu__complex_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>suN_types.h</label>
        <link refid="d9/d21/suN__types_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>hr_complex.h</label>
        <link refid="d1/d74/hr__complex_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>scattering.h</label>
        <link refid="df/dc5/scattering_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>tgmath.h</label>
      </node>
      <node id="2">
        <label>suN.h</label>
        <link refid="d1/d36/suN_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="d0/d94/structsrc__common" prot="public">src_common</innerclass>
    <innerclass refid="d3/dd2/structsrc__p" prot="public">src_p</innerclass>
    <innerclass refid="d0/d01/structprop__common" prot="public">prop_common</innerclass>
    <innerclass refid="dd/dff/structprop__p" prot="public">prop_p</innerclass>
    <innerclass refid="d7/d50/structmo__0" prot="public">mo_0</innerclass>
    <innerclass refid="d5/df2/structmo__p" prot="public">mo_p</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="df/dc5/scattering_8h_1ab04f422e2b82ecc71a5bd989ab5e151c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_pion_scattering</definition>
        <argsstring>(double *m, int nhits, int conf_num, double precision, int ts)</argsstring>
        <name>measure_pion_scattering</name>
        <param>
          <type>double *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nhits</declname>
        </param>
        <param>
          <type>int</type>
          <declname>conf_num</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="17" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="17" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a4d8c511c4e1362437732ef11c4b0c89b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_pion_scattering_I2</definition>
        <argsstring>(double *m, int numsources, double precision, char *path, char *cnfg_filename, meson_observable **mo_arr)</argsstring>
        <name>measure_pion_scattering_I2</name>
        <param>
          <type>double *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numsources</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cnfg_filename</declname>
        </param>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> **</type>
          <declname>mo_arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="18" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="18" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a947e49e93f20e3cce0202e25c99ff0d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_pion_scattering_I0</definition>
        <argsstring>(double *m, int numsources, double precision, char *path, char *cnfg_filename, int seq_prop, meson_observable **mo_arr)</argsstring>
        <name>measure_pion_scattering_I0</name>
        <param>
          <type>double *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numsources</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cnfg_filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seq_prop</declname>
        </param>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> **</type>
          <declname>mo_arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="19" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="19" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a7834686a5bad65e5acb44d6de32ce78e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void measure_pion_scattering_I0_TS</definition>
        <argsstring>(double *m, int numsources, double precision, char *path, char *cnfg_filename, int seq_prop, meson_observable **mo_arr)</argsstring>
        <name>measure_pion_scattering_I0_TS</name>
        <param>
          <type>double *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numsources</declname>
        </param>
        <param>
          <type>double</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cnfg_filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seq_prop</declname>
        </param>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> **</type>
          <declname>mo_arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="20" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a674b9490abfcd301ac7af13487a80556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int **</type>
        <definition>int** getmomlist</definition>
        <argsstring>(char *momstring, int *N)</argsstring>
        <name>getmomlist</name>
        <param>
          <type>char *</type>
          <declname>momstring</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="89" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="89" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a573c784fab76e7f2fd54319f35a4bb95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freep</definition>
        <argsstring>(int **p, int N)</argsstring>
        <name>freep</name>
        <param>
          <type>int **</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="90" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="90" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1ab861150784da411b0c66ae00624f84e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_mo</definition>
        <argsstring>(meson_observable *mo, char *name, int size)</argsstring>
        <name>init_mo</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="91" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a5683afd847111ae63c24530440302140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset_mo</definition>
        <argsstring>(meson_observable *mo)</argsstring>
        <name>reset_mo</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="92" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="92" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a6da195e3e8189c7f9e6662fa0422c1f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_mo</definition>
        <argsstring>(meson_observable *mo)</argsstring>
        <name>free_mo</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="93" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="93" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a2d8849cc41db3326d9daf58eeb62c326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_src_common</definition>
        <argsstring>(struct src_common *src, int tau)</argsstring>
        <name>init_src_common</name>
        <param>
          <type>struct <ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="94" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="94" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1aeaf5c20c77997e84fdd43e46c467d1a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_src_common_point</definition>
        <argsstring>(struct src_common *src, int tau)</argsstring>
        <name>init_src_common_point</name>
        <param>
          <type>struct <ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="95" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="95" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1abb7cbdfe7c552900f85a9e868ee86664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_src_p</definition>
        <argsstring>(struct src_p *srcp, struct src_common *src0, int px, int py, int pz)</argsstring>
        <name>init_src_p</name>
        <param>
          <type>struct <ref refid="d3/dd2/structsrc__p" kindref="compound">src_p</ref> *</type>
          <declname>srcp</declname>
        </param>
        <param>
          <type>struct <ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref> *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>px</declname>
        </param>
        <param>
          <type>int</type>
          <declname>py</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="96" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="96" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a5c70ec28a998f347c6961bdbca20f6f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_src_common</definition>
        <argsstring>(struct src_common *src)</argsstring>
        <name>free_src_common</name>
        <param>
          <type>struct <ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="97" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="97" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a5a3ce69adfeea95d11e465c782458788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_src_p</definition>
        <argsstring>(struct src_p *src)</argsstring>
        <name>free_src_p</name>
        <param>
          <type>struct <ref refid="d3/dd2/structsrc__p" kindref="compound">src_p</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="98" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="98" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a789aca6129b8ca93ac4a69bf55c9e12b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_propagator_P</definition>
        <argsstring>(spinor_field *prop, spinor_field *src, int ndilute, int tau)</argsstring>
        <name>make_propagator_P</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="99" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a08ca09fe8a90d244ce8610ae1a0b8684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_propagator_PA</definition>
        <argsstring>(spinor_field *prop, spinor_field *src, int ndilute, int tau)</argsstring>
        <name>make_propagator_PA</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>prop</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="100" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="100" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a7a19fe8ee5102246479aaedc748f68a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_prop_common</definition>
        <argsstring>(struct prop_common *prop, struct src_common *src0, int ndilute, int tau, char *bc)</argsstring>
        <name>make_prop_common</name>
        <param>
          <type>struct <ref refid="d0/d01/structprop__common" kindref="compound">prop_common</ref> *</type>
          <declname>prop</declname>
        </param>
        <param>
          <type>struct <ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref> *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>bc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="101" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="101" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a06bd36d2f6f687c19b6638fbe4e4994e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_mo_0</definition>
        <argsstring>(struct mo_0 *mo)</argsstring>
        <name>free_mo_0</name>
        <param>
          <type>struct <ref refid="d7/d50/structmo__0" kindref="compound">mo_0</ref> *</type>
          <declname>mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="102" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a42a6929ce059bb205a1884108b5af32e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_mo_p</definition>
        <argsstring>(struct mo_p *mo)</argsstring>
        <name>free_mo_p</name>
        <param>
          <type>struct <ref refid="d5/df2/structmo__p" kindref="compound">mo_p</ref> *</type>
          <declname>mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="103" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="103" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a0ebd7cc1bf89f62fd46d72c17db81971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void io2pt</definition>
        <argsstring>(meson_observable *mo, int pmax, int sourceno, char *path, char *name, char *cnfg_filename)</argsstring>
        <name>io2pt</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sourceno</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cnfg_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="104" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a149a803fe1a9101c7a335e83b1bb9d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void io4pt</definition>
        <argsstring>(meson_observable *mo, int pmax, int sourceno, char *path, char *name, char *cnfg_filename)</argsstring>
        <name>io4pt</name>
        <param>
          <type><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sourceno</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cnfg_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="105" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="105" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a0177846c4fe5f546236328548dcadd52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IOold_0</definition>
        <argsstring>(struct mo_0 *molist[], int numsources, char *path, char *cnfg_filename)</argsstring>
        <name>IOold_0</name>
        <param>
          <type>struct <ref refid="d7/d50/structmo__0" kindref="compound">mo_0</ref> *</type>
          <declname>molist</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>numsources</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cnfg_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="106" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="106" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1ae1624161b352e8e75a37e72ac84287cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IOold_p</definition>
        <argsstring>(struct mo_p *molist[], int numsources, char *path, char *cnfg_filename)</argsstring>
        <name>IOold_p</name>
        <param>
          <type>struct <ref refid="d5/df2/structmo__p" kindref="compound">mo_p</ref> *</type>
          <declname>molist</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>numsources</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cnfg_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="107" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="107" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a9a3baf9a5ec53dd78066bad7f26d14ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IO_json_0</definition>
        <argsstring>(struct mo_0 *molist[], int numsources, char *path, char *cnfg_filename)</argsstring>
        <name>IO_json_0</name>
        <param>
          <type>struct <ref refid="d7/d50/structmo__0" kindref="compound">mo_0</ref> *</type>
          <declname>molist</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>numsources</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cnfg_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="108" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="108" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1afc11dbd8843df8043935bb545ebb3581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IO_json_p</definition>
        <argsstring>(struct mo_p *molist[], int numsources, char *path, char *cnfg_filename)</argsstring>
        <name>IO_json_p</name>
        <param>
          <type>struct <ref refid="d5/df2/structmo__p" kindref="compound">mo_p</ref> *</type>
          <declname>molist</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>numsources</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cnfg_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="109" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="109" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a7e2a40675c74305ec9aa08cb55b17256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_mo_0</definition>
        <argsstring>(struct mo_0 *mo)</argsstring>
        <name>init_mo_0</name>
        <param>
          <type>struct <ref refid="d7/d50/structmo__0" kindref="compound">mo_0</ref> *</type>
          <declname>mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="110" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="110" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a13c58648a19e861e2d20d04e18d658f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_mo_p</definition>
        <argsstring>(struct mo_p *mo, int px, int py, int pz)</argsstring>
        <name>init_mo_p</name>
        <param>
          <type>struct <ref refid="d5/df2/structmo__p" kindref="compound">mo_p</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>px</declname>
        </param>
        <param>
          <type>int</type>
          <declname>py</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="111" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="111" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a123ffe8fb97c798a7eff572143393567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gen_mo_0</definition>
        <argsstring>(struct mo_0 *mo, struct prop_common *p0, struct src_common *s0, int tau)</argsstring>
        <name>gen_mo_0</name>
        <param>
          <type>struct <ref refid="d7/d50/structmo__0" kindref="compound">mo_0</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type>struct <ref refid="d0/d01/structprop__common" kindref="compound">prop_common</ref> *</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>struct <ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref> *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="112" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="112" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1ab8fd7c5661738c228ce014d98f38a331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gen_mo_p</definition>
        <argsstring>(struct mo_p *mo, struct prop_common *p0, struct prop_p *pp, struct src_common *s0, int tau)</argsstring>
        <name>gen_mo_p</name>
        <param>
          <type>struct <ref refid="d5/df2/structmo__p" kindref="compound">mo_p</ref> *</type>
          <declname>mo</declname>
        </param>
        <param>
          <type>struct <ref refid="d0/d01/structprop__common" kindref="compound">prop_common</ref> *</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>struct <ref refid="dd/dff/structprop__p" kindref="compound">prop_p</ref> *</type>
          <declname>pp</declname>
        </param>
        <param>
          <type>struct <ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref> *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="113" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="113" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1aa88dbb44c3c9fb0007015ed3d8ddea99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_prop_p</definition>
        <argsstring>(struct prop_p *prop, struct src_p *srcp, struct src_common *src0, int ndilute, int tau, char *bc)</argsstring>
        <name>make_prop_p</name>
        <param>
          <type>struct <ref refid="dd/dff/structprop__p" kindref="compound">prop_p</ref> *</type>
          <declname>prop</declname>
        </param>
        <param>
          <type>struct <ref refid="d3/dd2/structsrc__p" kindref="compound">src_p</ref> *</type>
          <declname>srcp</declname>
        </param>
        <param>
          <type>struct <ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref> *</type>
          <declname>src0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndilute</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>bc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="114" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="114" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1af6b5920598d9fe75aaab8c5d911902d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_prop_common</definition>
        <argsstring>(struct prop_common *prop)</argsstring>
        <name>free_prop_common</name>
        <param>
          <type>struct <ref refid="d0/d01/structprop__common" kindref="compound">prop_common</ref> *</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="115" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/dc5/scattering_8h_1a9212da8b414f0a491fdab2a30a2d50f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_prop_p</definition>
        <argsstring>(struct prop_p *prop)</argsstring>
        <name>free_prop_p</name>
        <param>
          <type>struct <ref refid="dd/dff/structprop__p" kindref="compound">prop_p</ref> *</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" line="116" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h" declline="116" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>File<sp/>scattering.h</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>Functions<sp/>for<sp/>Finite<sp/>Size<sp/>Method<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SCATTERING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCATTERING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;suN.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;meson_observables.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_pion_scattering(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nhits,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conf_num,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>precision,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ts);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_pion_scattering_I2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numsources,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>precision,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cnfg_filename,<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref>**<sp/>mo_arr);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_pion_scattering_I0(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numsources,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>precision,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cnfg_filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seq_prop,<sp/><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref>**<sp/>mo_arr);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>measure_pion_scattering_I0_TS(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numsources,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>precision,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cnfg_filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seq_prop,<sp/><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref>**<sp/>mo_arr);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="d0/d94/structsrc__common" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref>{</highlight></codeline>
<codeline lineno="26" refid="d0/d94/structsrc__common_1afdb39c102289b02ba97871ee860ce4eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*<ref refid="d0/d94/structsrc__common_1afdb39c102289b02ba97871ee860ce4eb" kindref="member">src_0</ref>;<sp/></highlight></codeline>
<codeline lineno="27" refid="d0/d94/structsrc__common_1a897379bd96c9daf84d37a9b3777d4ac4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*<ref refid="d0/d94/structsrc__common_1a897379bd96c9daf84d37a9b3777d4ac4" kindref="member">src_0_eta</ref>;<sp/></highlight></codeline>
<codeline lineno="28" refid="d0/d94/structsrc__common_1aa095e6159082ceb7e8f573848d77122c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*<ref refid="d0/d94/structsrc__common_1aa095e6159082ceb7e8f573848d77122c" kindref="member">src_0_0</ref>;<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="d3/dd2/structsrc__p" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d3/dd2/structsrc__p" kindref="compound">src_p</ref>{</highlight></codeline>
<codeline lineno="35" refid="d3/dd2/structsrc__p_1a64101dfe336114e8284a7b610f55cba0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d3/dd2/structsrc__p_1a64101dfe336114e8284a7b610f55cba0" kindref="member">p</ref>[3];<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*<ref refid="d3/dd2/structsrc__p" kindref="compound">src_p</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*src_mp;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*src_0_p;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*src_0_mp;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*src_p_0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*src_mp_0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="d0/d01/structprop__common" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d0/d01/structprop__common" kindref="compound">prop_common</ref>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*Q_0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*Q_0_eta;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>**W_0_0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="dd/dff/structprop__p" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dd/dff/structprop__p" kindref="compound">prop_p</ref>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*Q_p;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*Q_mp;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*W_0_p;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*W_0_mp;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*W_p_0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*W_mp_0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="d7/d50/structmo__0" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d7/d50/structmo__0" kindref="compound">mo_0</ref>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*rho[3][3];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*pi;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="d5/df2/structmo__p" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d5/df2/structmo__p" kindref="compound">mo_p</ref>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p[3];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*d,<sp/>*r1,<sp/>*r2,<sp/>*r3,<sp/>*r4,<sp/>*pi;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref><sp/>*t1[3],<sp/>*t2[3],<sp/>*rho[3][3];</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>getmomlist(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>momstring,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>N);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freep(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_mo(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref>*<sp/>mo,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_mo(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref>*<sp/>mo);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_mo(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref>*<sp/>mo);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_src_common(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref>*<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_src_common_point(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref>*<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_src_p(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d3/dd2/structsrc__p" kindref="compound">src_p</ref>*<sp/>srcp,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref>*<sp/>src0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pz);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_src_common(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref>*<sp/>src);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_src_p(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d3/dd2/structsrc__p" kindref="compound">src_p</ref>*<sp/>src);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>make_propagator_P(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref>*<sp/>prop,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref>*<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>make_propagator_PA(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref>*<sp/>prop,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref>*<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>make_prop_common(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d0/d01/structprop__common" kindref="compound">prop_common</ref>*<sp/>prop,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref>*<sp/>src0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>bc);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_mo_0(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d7/d50/structmo__0" kindref="compound">mo_0</ref>*<sp/>mo);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_mo_p(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d5/df2/structmo__p" kindref="compound">mo_p</ref>*<sp/>mo);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>io2pt(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref>*<sp/>mo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pmax,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sourceno,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>cnfg_filename);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>io4pt(<ref refid="d6/d0c/structmeson__observable__s" kindref="compound">meson_observable</ref>*<sp/>mo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pmax,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sourceno,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>cnfg_filename);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOold_0(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d7/d50/structmo__0" kindref="compound">mo_0</ref>*<sp/>molist[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numsources,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cnfg_filename);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOold_p(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d5/df2/structmo__p" kindref="compound">mo_p</ref>*<sp/>molist[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numsources,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cnfg_filename<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IO_json_0(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d7/d50/structmo__0" kindref="compound">mo_0</ref>*<sp/>molist[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numsources,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>cnfg_filename);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IO_json_p(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d5/df2/structmo__p" kindref="compound">mo_p</ref>*<sp/>molist[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numsources,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cnfg_filename);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_mo_0(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d7/d50/structmo__0" kindref="compound">mo_0</ref>*<sp/>mo);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_mo_p(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d5/df2/structmo__p" kindref="compound">mo_p</ref>*<sp/>mo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>px,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>py,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pz);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_mo_0(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d7/d50/structmo__0" kindref="compound">mo_0</ref>*<sp/>mo,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d0/d01/structprop__common" kindref="compound">prop_common</ref>*<sp/>p0,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref>*<sp/>s0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_mo_p(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d5/df2/structmo__p" kindref="compound">mo_p</ref>*<sp/>mo,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d0/d01/structprop__common" kindref="compound">prop_common</ref>*<sp/>p0,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="dd/dff/structprop__p" kindref="compound">prop_p</ref>*<sp/>pp,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref>*<sp/>s0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>make_prop_p(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="dd/dff/structprop__p" kindref="compound">prop_p</ref>*<sp/>prop,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d3/dd2/structsrc__p" kindref="compound">src_p</ref>*<sp/>srcp,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d0/d94/structsrc__common" kindref="compound">src_common</ref>*<sp/>src0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndilute,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tau,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>bc);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_prop_common(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="d0/d01/structprop__common" kindref="compound">prop_common</ref>*<sp/>prop);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_prop_p(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="dd/dff/structprop__p" kindref="compound">prop_p</ref>*<sp/>prop);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/scattering.h"/>
  </compounddef>
</doxygen>
