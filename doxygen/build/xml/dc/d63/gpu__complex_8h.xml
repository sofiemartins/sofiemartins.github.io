<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dc/d63/gpu__complex_8h" kind="file" language="C++">
    <compoundname>gpu_complex.h</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a60ef6e1bcfabb95cfeb300e1d03ce470" prot="public" static="no">
        <name>I</name>
        <initializer>(hr_complex_int(0, 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1148" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a0131f78755db5d69daabc4b1a843a113" prot="public" static="no">
        <name>creal</name>
        <param><defname>a</defname></param>
        <initializer>((a).re)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1149" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a7b50ad49d8ddc292433961f178c98765" prot="public" static="no">
        <name>cimag</name>
        <param><defname>a</defname></param>
        <initializer>((a).im)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1150" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1ae733c473884e71428b01925839c909a2" prot="public" static="no">
        <name>conj</name>
        <param><defname>a</defname></param>
        <initializer>(hr_complex((a).re, -(a).im))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1151" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a2dfb2bdfab52fe8d2fc6c1fdb61fa153" prot="public" static="no">
        <name>_complex_re</name>
        <param><defname>a</defname></param>
        <initializer>   creal(a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1164" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1adcac101bd9e8c329f95086e8b9b22972" prot="public" static="no">
        <name>_complex_im</name>
        <param><defname>a</defname></param>
        <initializer>   cimag(a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1170" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a27bccfbe4666912da2c8b608f49063e5" prot="public" static="no">
        <name>_complex_0</name>
        <param><defname>a</defname></param>
        <initializer>   (a)=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1176" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a811d6fa64af346c25a9d5939711ef7bd" prot="public" static="no">
        <name>_complex_1</name>
        <param><defname>a</defname></param>
        <initializer>   (a)=1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1182" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a6dd5c334eb9841d1a68e4d13d6d6da1b" prot="public" static="no">
        <name>_complex_add_1</name>
        <param><defname>a</defname></param>
        <initializer>   (a)+=1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1188" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1af88af09a0336b39caf4b6abf55b9353f" prot="public" static="no">
        <name>_complex_i</name>
        <param><defname>a</defname></param>
        <initializer>   (a)=I</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1194" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a48bf55f19e0c5dd5a05e9fa3b45b5712" prot="public" static="no">
        <name>_complex_star</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)=conj(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1200" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a1df77e31055621ffb85afa3623f5500a" prot="public" static="no">
        <name>_complex_star_minus</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)=-conj(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1206" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1ab0da935f6f161b632158b9468d34f43e" prot="public" static="no">
        <name>_complex_star_assign</name>
        <param><defname>a</defname></param>
        <initializer>   (a)=conj(a)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1212" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a59e5e9ffb8b56cb562579a246d915d1c" prot="public" static="no">
        <name>_complex_mul</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)*(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1218" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a728916918c2f9a79a606bb06685b83e3" prot="public" static="no">
        <name>_complex_mulr</name>
        <param><defname>a</defname></param>
        <param><defname>r</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)=(r)*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1224" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a27d2fa7a298d74c3b8777f495ed4019f" prot="public" static="no">
        <name>_complex_add</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)+(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1230" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a435ffd89e7bbe58e3caafe7e36ecef1d" prot="public" static="no">
        <name>_complex_sub</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)-(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1236" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a9fa877e2a631a5202eab28363f1ed162" prot="public" static="no">
        <name>_complex_add_star</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)+conj(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1242" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a3c601fce12284ca0689b7f518a212cfe" prot="public" static="no">
        <name>_complex_sub_star</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)-conj(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1248" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a0b05f2f70aeda005c57f344514cdd5ee" prot="public" static="no">
        <name>_complex_div</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>  (a)=(b)/(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1254" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a0781f74ab90944691c9219c451da2d1b" prot="public" static="no">
        <name>_complex_inv</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>  (a)=1/(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1260" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a8739496677b60f49e0c604fc39857b23" prot="public" static="no">
        <name>_complex_prod</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   conj(a)*b</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1266" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1ac9998335d4f180fe9a84529caacdd5c9" prot="public" static="no">
        <name>_complex_prod_re</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   creal(conj(a)*(b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1272" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1aa4fa175ad3ae414b20496bd693a9534b" prot="public" static="no">
        <name>_complex_prod_m1_re</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   creal(conj(1-a)*b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1278" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a780183a4395415cf0830504039147f84" prot="public" static="no">
        <name>_complex_prod_im</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   cimag(conj(a)*b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1284" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1aa9e0bf951677993c27c0fa4974b1595d" prot="public" static="no">
        <name>_complex_prod_assign</name>
        <param><defname>c</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (c)+=conj(a)*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1290" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a4b01df109863c72f5155366fab2fa127" prot="public" static="no">
        <name>_complex_mul_star_star_assign</name>
        <param><defname>c</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (c)+=conj((a)*(b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1296" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a554a1cd17023caedc70bcda2ff77d278" prot="public" static="no">
        <name>_complex_minus</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)=-(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1302" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1abd9b9b1b445f7c350b5c1ce306a96ac2" prot="public" static="no">
        <name>_complex_i_minus</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)=-I*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1308" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a3a5250616c89625c9a347d912c43f961" prot="public" static="no">
        <name>_complex_i_plus</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)=I*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1314" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1aedef3cf7a9d96c5eb3c455cd3bbaf245" prot="public" static="no">
        <name>_complex_i_add</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)+I*(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1320" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a9ec47b3244fbeb3fa9d489c5a1f888ee" prot="public" static="no">
        <name>_complex_i_sub</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)-I*(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1326" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a96bf0f053dda87bfb8677fd24ce2f321" prot="public" static="no">
        <name>_complex_add_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)+=(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1332" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a3075928aae8b4744c23052fe97fd8861" prot="public" static="no">
        <name>_complex_sub_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)-=(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1338" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1ab7a2c99b0aaebc4e7c8a583eff7bf4a0" prot="public" static="no">
        <name>_complex_add_star_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)+=(b)+conj(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1344" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1ac955c028ed24074f232afc6aff159b3a" prot="public" static="no">
        <name>_complex_i_add_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)+=I*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1350" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1ac1ebf0aa39d58581b83da741aaa9ee81" prot="public" static="no">
        <name>_complex_i_sub_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)-=I*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1356" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a465985e54ba74be5dfc67a93e320badc" prot="public" static="no">
        <name>_complex_mul_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)+=(b)*(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1362" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a9b3bd4fa39a06fa086441b0c187830e6" prot="public" static="no">
        <name>_complex_mulcr_assign</name>
        <param><defname>a</defname></param>
        <param><defname>r</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>  (a)+=(r)*(b)*(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1368" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a141e0bb192ce764514203011ffc53f94" prot="public" static="no">
        <name>_complex_mul_star</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)=(b)*conj(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1374" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a926015bd95396b6e4127fd54f2d09510" prot="public" static="no">
        <name>_complex_mul_star_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)+=(b)*conj(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1380" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1abcf1ecc99118c7e01b865e8e47677d19" prot="public" static="no">
        <name>_complex_mul_star_assign_re</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)+=creal((b)*conj(c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1386" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a1f018955ce22e158966bf2dab63a9f2a" prot="public" static="no">
        <name>_complex_mul_sub_assign</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>   (a)-=(b)*(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1392" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a65ef522b45c67f3820a11fafe55d6a85" prot="public" static="no">
        <name>_complex_mulr_assign</name>
        <param><defname>a</defname></param>
        <param><defname>r</defname></param>
        <param><defname>b</defname></param>
        <initializer>   (a)+=(r)*(b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1398" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1ae65bef30f1cb58f3d4842a2429ade1af" prot="public" static="no">
        <name>_complex_rlc</name>
        <param><defname>a</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>c1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>c2</defname></param>
        <initializer>    (a)=(r1)*(c1)+(r2)*(c2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1404" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a5ec14ec0ed07ce967b68a4e1909bda87" prot="public" static="no">
        <name>_complex_rlc_assign</name>
        <param><defname>a</defname></param>
        <param><defname>r1</defname></param>
        <param><defname>c1</defname></param>
        <param><defname>r2</defname></param>
        <param><defname>c2</defname></param>
        <initializer>    (a)+=(r1)*(c1)+(r2)*(c2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1410" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1a169090f5562eb0615cfd8158f36b72f9" prot="public" static="no">
        <name>_complex_clc</name>
        <param><defname>a</defname></param>
        <param><defname>z1</defname></param>
        <param><defname>c1</defname></param>
        <param><defname>z2</defname></param>
        <param><defname>c2</defname></param>
        <initializer>    (a)=(z1)*(c1)+(z2)*(c2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1416" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/d63/gpu__complex_8h_1aa7b66dfa9fee63d3189998469e4c4ab4" prot="public" static="no">
        <name>_complex_clc_assign</name>
        <param><defname>a</defname></param>
        <param><defname>z1</defname></param>
        <param><defname>c1</defname></param>
        <param><defname>z2</defname></param>
        <param><defname>c2</defname></param>
        <initializer>    (a)+=(z1)*(c1)+(z2)*(c2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1422" column="9" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1422" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dc/d63/gpu__complex_8h_1a72e4db6861a8b9b07b5136d41c6f1589" prot="public" static="no" mutable="no">
        <type>__host__ __device__ const hr_complex_int &amp;</type>
        <definition>__host__ __device__ const hr_complex &amp; c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <initializer>{return c+x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="972" column="72" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="972" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dc/d63/gpu__complex_8h_1ae34e91588c024e3b5f9fd73e44abf29a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>struct __align__</definition>
        <argsstring>(4) hr_complex_int</argsstring>
        <name>__align__</name>
        <param>
          <type>4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1" column="0" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="27" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="dc/d63/gpu__complex_8h_1aa3297e8a899d9086b0817dd34e621b1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>struct __align__</definition>
        <argsstring>(8) hr_complex</argsstring>
        <name>__align__</name>
        <param>
          <type>8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="1" column="0" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="606" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="dc/d63/gpu__complex_8h_1aafd0958582510c89268a7b57b43a0eb4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ __attribute__</definition>
        <argsstring>((always_inline)) hr_complex_int operator+(const int x</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(always_inline)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="972" column="28" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1020" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="dc/d63/gpu__complex_8h_1ad5102f903d9a4a8bd7d4038bd6c078e5" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ __attribute__</definition>
        <argsstring>((always_inline)) hr_complex_flt operator+(const hr_complex_int &amp;x</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(always_inline)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" line="987" column="28" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h" bodystart="1030" bodyend="1035"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************\</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>(c)<sp/>2008,<sp/>Claudio<sp/>Pica<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>All<sp/>rights<sp/>reserved.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">\***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>File<sp/>gpu_complex.h</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Type<sp/>definitions<sp/>and<sp/>macros<sp/>for<sp/>complex<sp/>numbers<sp/>used<sp/>in<sp/>C++<sp/>and<sp/>CUDA</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>COMPLEX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMPLEX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/>Definitions<sp/>of<sp/>type<sp/>complex</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/>The<sp/>following<sp/>structs<sp/>are<sp/>generated<sp/>using:</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/>https://github.com/erikkjellgren/SimplyComplex</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/>Do<sp/>NOT<sp/>change<sp/>them<sp/>manually</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hr_complex_int;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hr_complex_flt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hr_complex;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__align__(4)<sp/>hr_complex_int{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>re,<sp/>im;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator-(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="119"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(-re,<sp/>-im);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x.re;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>+=<sp/>x.im;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x.re;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>-=<sp/>x.im;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>re_tmp<sp/>=<sp/>re*(x.re)<sp/>-<sp/>im*(x.im);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>im_tmp<sp/>=<sp/>re*(x.im)<sp/>+<sp/>im*(x.re);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>re_tmp<sp/>=<sp/>(re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>im_tmp<sp/>=<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="227"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re+x,<sp/>im);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="231"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re+x,<sp/>im);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="235"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re+x,<sp/>im);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="239"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re+x.re,<sp/>im+x.im);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="243"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re-x,<sp/>im);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="247"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re-x,<sp/>im);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="251"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re-x,<sp/>im);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="255"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re-x.re,<sp/>im-x.im);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="259"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re*x,<sp/>im*x);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="263"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re*x,<sp/>im*x);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="267"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re*x,<sp/>im*x);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="271"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re*(x.re)<sp/>-<sp/>im*(x.im),<sp/>re*(x.im)<sp/>+<sp/>im*(x.re));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="275"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re/x,<sp/>im/x);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="279"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re/x,<sp/>im/x);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="283"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int(re/x,<sp/>im/x);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="287"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_int((re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im)),<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im)));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal">};</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__align__(4)<sp/>hr_complex_flt{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>re,<sp/>im;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator-(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="392"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(-re,<sp/>-im);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x.re;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>+=<sp/>x.im;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x.re;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>+=<sp/>x.im;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x.re;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>-=<sp/>x.im;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x.re;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>-=<sp/>x.im;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>re_tmp<sp/>=<sp/>re*(x.re)<sp/>-<sp/>im*(x.im);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>im_tmp<sp/>=<sp/>re*(x.im)<sp/>+<sp/>im*(x.re);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>re_tmp<sp/>=<sp/>re*(x.re)<sp/>-<sp/>im*(x.im);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>im_tmp<sp/>=<sp/>re*(x.im)<sp/>+<sp/>im*(x.re);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>re_tmp<sp/>=<sp/>(re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>im_tmp<sp/>=<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>re_tmp<sp/>=<sp/>(re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>im_tmp<sp/>=<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="526"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re+x,<sp/>im);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="530"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re+x,<sp/>im);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="534"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re+x,<sp/>im);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="538"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re+x.re,<sp/>im+x.im);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="542"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re+x.re,<sp/>im+x.im);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="546"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re-x,<sp/>im);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="550"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re-x,<sp/>im);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="554"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re-x,<sp/>im);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="558"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re-x.re,<sp/>im-x.im);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="562"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re-x.re,<sp/>im-x.im);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="566"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re*x,<sp/>im*x);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="570"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re*x,<sp/>im*x);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="574"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re*x,<sp/>im*x);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="578"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re*(x.re)<sp/>-<sp/>im*(x.im),<sp/>re*(x.im)<sp/>+<sp/>im*(x.re));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="582"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re*(x.re)<sp/>-<sp/>im*(x.im),<sp/>re*(x.im)<sp/>+<sp/>im*(x.re));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="586"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re/x,<sp/>im/x);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="590"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re/x,<sp/>im/x);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="594"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt(re/x,<sp/>im/x);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="598"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt((re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im)),<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im)));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="602"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex_flt((re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im)),<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im)));</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal">};</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__align__(8)<sp/>hr_complex{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>re,<sp/>im;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/>hr_complex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator-(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="716"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(-re,<sp/>-im);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x.re;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>+=<sp/>x.im;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x.re;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>+=<sp/>x.im;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>+=<sp/>x.re;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>+=<sp/>x.im;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x.re;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>-=<sp/>x.im;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x.re;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>-=<sp/>x.im;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>-=<sp/>x.re;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>-=<sp/>x.im;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>*=<sp/>x;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>re_tmp<sp/>=<sp/>re*(x.re)<sp/>-<sp/>im*(x.im);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>im_tmp<sp/>=<sp/>re*(x.im)<sp/>+<sp/>im*(x.re);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>re_tmp<sp/>=<sp/>re*(x.re)<sp/>-<sp/>im*(x.im);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>im_tmp<sp/>=<sp/>re*(x.im)<sp/>+<sp/>im*(x.re);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>re_tmp<sp/>=<sp/>re*(x.re)<sp/>-<sp/>im*(x.im);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>im_tmp<sp/>=<sp/>re*(x.im)<sp/>+<sp/>im*(x.re);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>/=<sp/>x;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>re_tmp<sp/>=<sp/>(re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>im_tmp<sp/>=<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>re_tmp<sp/>=<sp/>(re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>im_tmp<sp/>=<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex&amp;<sp/>operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>re_tmp<sp/>=<sp/>(re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>im_tmp<sp/>=<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="876"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re+x,<sp/>im);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="880"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re+x,<sp/>im);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="884"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re+x,<sp/>im);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="888"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re+x.re,<sp/>im+x.im);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="892"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re+x.re,<sp/>im+x.im);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="896"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re+x.re,<sp/>im+x.im);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="900"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re-x,<sp/>im);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="904"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re-x,<sp/>im);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="908"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re-x,<sp/>im);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="912"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re-x.re,<sp/>im-x.im);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="916"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re-x.re,<sp/>im-x.im);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="920"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re-x.re,<sp/>im-x.im);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="924"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re*x,<sp/>im*x);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="928"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re*x,<sp/>im*x);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="932"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re*x,<sp/>im*x);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="936"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re*(x.re)<sp/>-<sp/>im*(x.im),<sp/>re*(x.im)<sp/>+<sp/>im*(x.re));</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="940"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re*(x.re)<sp/>-<sp/>im*(x.im),<sp/>re*(x.im)<sp/>+<sp/>im*(x.re));</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="944"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re*(x.re)<sp/>-<sp/>im*(x.im),<sp/>re*(x.im)<sp/>+<sp/>im*(x.re));</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="948"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re/x,<sp/>im/x);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="952"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re/x,<sp/>im/x);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="956"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex(re/x,<sp/>im/x);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="960"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex((re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im)),<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im)));</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="964"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex((re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im)),<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im)));</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="968"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr_complex((re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im)),<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im)));</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal">};</highlight></codeline>
<codeline lineno="972"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+x;}</highlight></codeline>
<codeline lineno="973"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+x;}</highlight></codeline>
<codeline lineno="974"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+x;}</highlight></codeline>
<codeline lineno="975"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-c+x;}</highlight></codeline>
<codeline lineno="976"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-c+x;}</highlight></codeline>
<codeline lineno="977"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-c+x;}</highlight></codeline>
<codeline lineno="978"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c*x;}</highlight></codeline>
<codeline lineno="979"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c*x;}</highlight></codeline>
<codeline lineno="980"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c*x;}</highlight></codeline>
<codeline lineno="981"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hr_complex_int)x)/c;}</highlight></codeline>
<codeline lineno="982"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hr_complex_int)x)/c;}</highlight></codeline>
<codeline lineno="983"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hr_complex_int)x)/c;}</highlight></codeline>
<codeline lineno="984"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+x;}</highlight></codeline>
<codeline lineno="985"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+x;}</highlight></codeline>
<codeline lineno="986"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+x;}</highlight></codeline>
<codeline lineno="987"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+x;}</highlight></codeline>
<codeline lineno="988"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-c+x;}</highlight></codeline>
<codeline lineno="989"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-c+x;}</highlight></codeline>
<codeline lineno="990"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-c+x;}</highlight></codeline>
<codeline lineno="991"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-c+x;}</highlight></codeline>
<codeline lineno="992"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c*x;}</highlight></codeline>
<codeline lineno="993"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c*x;}</highlight></codeline>
<codeline lineno="994"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c*x;}</highlight></codeline>
<codeline lineno="995"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c*x;}</highlight></codeline>
<codeline lineno="996"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hr_complex_flt)x)/c;}</highlight></codeline>
<codeline lineno="997"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hr_complex_flt)x)/c;}</highlight></codeline>
<codeline lineno="998"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hr_complex_flt)x)/c;}</highlight></codeline>
<codeline lineno="999"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hr_complex_flt)x)/c;}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+x;}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+x;}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+x;}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+x;}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c+x;}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-c+x;}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-c+x;}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-c+x;}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-c+x;}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-c+x;}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c*x;}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c*x;}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c*x;}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c*x;}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c*x;}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hr_complex)x)/c;}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hr_complex)x)/c;}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hr_complex)x)/c;}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_int<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hr_complex)x)/c;}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex<sp/>operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;c){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hr_complex)x)/c;}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int::hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int::hr_complex_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>hr_complex_int::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>hr_complex_int::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>hr_complex_int::operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>re<sp/>+=<sp/>x.re;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>im<sp/>+=<sp/>x.im;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>hr_complex_int::operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>re<sp/>+=<sp/>x.re;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>im<sp/>+=<sp/>x.im;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>hr_complex_int::operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>re<sp/>-=<sp/>x.re;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>im<sp/>-=<sp/>x.im;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>hr_complex_int::operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>re<sp/>-=<sp/>x.re;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>im<sp/>-=<sp/>x.im;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>hr_complex_int::operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>re_tmp<sp/>=<sp/>re*(x.re)<sp/>-<sp/>im*(x.im);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>im_tmp<sp/>=<sp/>re*(x.im)<sp/>+<sp/>im*(x.re);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>hr_complex_int::operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/>re_tmp<sp/>=<sp/>re*(x.re)<sp/>-<sp/>im*(x.im);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>im_tmp<sp/>=<sp/>re*(x.im)<sp/>+<sp/>im*(x.re);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>hr_complex_int::operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex_flt<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>re_tmp<sp/>=<sp/>(re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/>im_tmp<sp/>=<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_int&amp;<sp/>hr_complex_int::operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>re_tmp<sp/>=<sp/>(re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>im_tmp<sp/>=<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt::hr_complex_flt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>hr_complex_flt::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>re<sp/>=<sp/>x.re;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>x.im;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>hr_complex_flt::operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>re<sp/>+=<sp/>x.re;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>im<sp/>+=<sp/>x.im;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>hr_complex_flt::operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>re<sp/>-=<sp/>x.re;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>im<sp/>-=<sp/>x.im;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>hr_complex_flt::operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/>re_tmp<sp/>=<sp/>re*(x.re)<sp/>-<sp/>im*(x.im);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/>im_tmp<sp/>=<sp/>re*(x.im)<sp/>+<sp/>im*(x.re);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))<sp/>hr_complex_flt&amp;<sp/>hr_complex_flt::operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hr_complex<sp/>&amp;x)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>re_tmp,<sp/>im_tmp;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>re_tmp<sp/>=<sp/>(re*(x.re)<sp/>+<sp/>im*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>im_tmp<sp/>=<sp/>(im*(x.re)<sp/>-<sp/>re*(x.im))<sp/>/<sp/>((x.re)*(x.re)<sp/>+<sp/>(x.im)*(x.im));</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/>re<sp/>=<sp/>re_tmp;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>im_tmp;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="1144"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1145"><highlight class="comment">*<sp/>End<sp/>of<sp/>generated<sp/>code</highlight></codeline>
<codeline lineno="1146"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1147"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>I<sp/>(hr_complex_int(0,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>creal(a)<sp/>((a).re)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cimag(a)<sp/>((a).im)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>conj(a)<sp/>(hr_complex((a).re,<sp/>-(a).im))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="1154"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1155"><highlight class="comment">*<sp/>Macros<sp/>for<sp/>complex<sp/>numbers</highlight></codeline>
<codeline lineno="1156"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1157"><highlight class="comment">*<sp/>Arguments<sp/>are<sp/>variables<sp/>of<sp/>type<sp/>complex</highlight></codeline>
<codeline lineno="1158"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1159"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1162"><highlight class="comment">*<sp/>Re(a)<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="1163"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_re(a)<sp/>\</highlight></codeline>
<codeline lineno="1165"><highlight class="preprocessor"><sp/><sp/><sp/>creal(a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1168"><highlight class="comment">*<sp/>Im(a)<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="1169"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_im(a)<sp/>\</highlight></codeline>
<codeline lineno="1171"><highlight class="preprocessor"><sp/><sp/><sp/>cimag(a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1174"><highlight class="comment">*<sp/>a=0<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="1175"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_0(a)<sp/>\</highlight></codeline>
<codeline lineno="1177"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1180"><highlight class="comment">*<sp/>a=1.<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="1181"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_1(a)<sp/>\</highlight></codeline>
<codeline lineno="1183"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1186"><highlight class="comment">*<sp/>a+=1.<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="1187"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_add_1(a)<sp/>\</highlight></codeline>
<codeline lineno="1189"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1192"><highlight class="comment">*<sp/>a=i<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="1193"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i(a)<sp/>\</highlight></codeline>
<codeline lineno="1195"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=I</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1198"><highlight class="comment">*<sp/>a=b^+<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1199"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_star(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1201"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=conj(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1204"><highlight class="comment">*<sp/>a=-b^+<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1205"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_star_minus(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1207"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=-conj(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1210"><highlight class="comment">*<sp/>a=a^+<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="1211"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_star_assign(a)<sp/>\</highlight></codeline>
<codeline lineno="1213"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=conj(a)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1216"><highlight class="comment">*<sp/>a=b*c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1217"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1219"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)*(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1222"><highlight class="comment">*<sp/>a=r*b<sp/>(a,b<sp/>complex;<sp/>r<sp/>real)</highlight></codeline>
<codeline lineno="1223"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mulr(a,r,b)<sp/>\</highlight></codeline>
<codeline lineno="1225"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(r)*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1228"><highlight class="comment">*<sp/>a=b+c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1229"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_add(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1231"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)+(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1234"><highlight class="comment">*<sp/>a=b-c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1235"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_sub(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1237"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)-(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1240"><highlight class="comment">*<sp/>a=b+c^(+)<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1241"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_add_star(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1243"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)+conj(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1246"><highlight class="comment">*<sp/>a=b-c^(+)<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1247"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_sub_star(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1249"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)-conj(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1252"><highlight class="comment">*<sp/>a=b/c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1253"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_div(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1255"><highlight class="preprocessor"><sp/><sp/>(a)=(b)/(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1258"><highlight class="comment">*<sp/>a=1/b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1259"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_inv(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1261"><highlight class="preprocessor"><sp/><sp/>(a)=1/(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1264"><highlight class="comment">*<sp/>a^*b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1265"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_prod(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1267"><highlight class="preprocessor"><sp/><sp/><sp/>conj(a)*b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1270"><highlight class="comment">*<sp/>Re(a^*b)<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1271"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_prod_re(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1273"><highlight class="preprocessor"><sp/><sp/><sp/>creal(conj(a)*(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1276"><highlight class="comment">*<sp/>Re((1-a)^*(1-b))<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1277"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_prod_m1_re(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1279"><highlight class="preprocessor"><sp/><sp/><sp/>creal(conj(1-a)*b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1282"><highlight class="comment">*<sp/>Im(a^*b)<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1283"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_prod_im(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1285"><highlight class="preprocessor"><sp/><sp/><sp/>cimag(conj(a)*b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1288"><highlight class="comment">*<sp/>c+=(a^*b)<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1289"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_prod_assign(c,a,b)<sp/>\</highlight></codeline>
<codeline lineno="1291"><highlight class="preprocessor"><sp/><sp/><sp/>(c)+=conj(a)*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1294"><highlight class="comment">*<sp/>c+=(a^*b^)<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1295"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul_star_star_assign(c,a,b)<sp/>\</highlight></codeline>
<codeline lineno="1297"><highlight class="preprocessor"><sp/><sp/><sp/>(c)+=conj((a)*(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1300"><highlight class="comment">*<sp/>a=-b<sp/>(a<sp/>complex)</highlight></codeline>
<codeline lineno="1301"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_minus(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1303"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=-(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1306"><highlight class="comment">*<sp/>a=-i*b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1307"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i_minus(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1309"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=-I*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1312"><highlight class="comment">*<sp/>a=i*b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1313"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i_plus(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1315"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=I*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1318"><highlight class="comment">*<sp/>a=b+i*c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1319"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i_add(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1321"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)+I*(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1324"><highlight class="comment">*<sp/>a=b-i*c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1325"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i_sub(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1327"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)-I*(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1330"><highlight class="comment">*<sp/>a+=b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1331"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_add_assign(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1333"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1336"><highlight class="comment">*<sp/>a-=b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1337"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_sub_assign(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1339"><highlight class="preprocessor"><sp/><sp/><sp/>(a)-=(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1342"><highlight class="comment">*<sp/>a+=(b+c^*)<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1343"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_add_star_assign(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1345"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=(b)+conj(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1348"><highlight class="comment">*<sp/>a+=i*b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1349"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i_add_assign(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1351"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=I*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1354"><highlight class="comment">*<sp/>a-=i*b<sp/>(a,b<sp/>complex)</highlight></codeline>
<codeline lineno="1355"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_i_sub_assign(a,b)<sp/>\</highlight></codeline>
<codeline lineno="1357"><highlight class="preprocessor"><sp/><sp/><sp/>(a)-=I*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1360"><highlight class="comment">*<sp/>a+=b*c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1361"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul_assign(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1363"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=(b)*(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1366"><highlight class="comment">*<sp/>a+=r*b*c<sp/>(a,b,c<sp/>complex,<sp/>r<sp/>real)</highlight></codeline>
<codeline lineno="1367"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mulcr_assign(a,r,b,c)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1369"><highlight class="preprocessor"><sp/><sp/>(a)+=(r)*(b)*(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1372"><highlight class="comment">*<sp/>a=b*(c^+)<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1373"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul_star(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1375"><highlight class="preprocessor"><sp/><sp/><sp/>(a)=(b)*conj(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1378"><highlight class="comment">*<sp/>a+=b*(c^+)<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1379"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul_star_assign(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1381"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=(b)*conj(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1384"><highlight class="comment">*<sp/>a+=Re[<sp/>b*(c^+)<sp/>]<sp/>(a<sp/>real<sp/>;b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1385"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul_star_assign_re(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1387"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=creal((b)*conj(c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1390"><highlight class="comment">*<sp/>a-=b*c<sp/>(a,b,c<sp/>complex)</highlight></codeline>
<codeline lineno="1391"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mul_sub_assign(a,b,c)<sp/>\</highlight></codeline>
<codeline lineno="1393"><highlight class="preprocessor"><sp/><sp/><sp/>(a)-=(b)*(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1396"><highlight class="comment">*<sp/>a+=r*b<sp/>(a,b<sp/>complex;<sp/>r<sp/>real)</highlight></codeline>
<codeline lineno="1397"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_mulr_assign(a,r,b)<sp/>\</highlight></codeline>
<codeline lineno="1399"><highlight class="preprocessor"><sp/><sp/><sp/>(a)+=(r)*(b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1402"><highlight class="comment">*<sp/>a=r1*c1+r2*c2<sp/>(a,c1,c2<sp/>complex;<sp/>r1,r2<sp/>real)</highlight></codeline>
<codeline lineno="1403"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_rlc(a,r1,c1,r2,c2)<sp/>\</highlight></codeline>
<codeline lineno="1405"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(a)=(r1)*(c1)+(r2)*(c2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1408"><highlight class="comment">*<sp/>a+=r1*c1+r2*c2<sp/>(a,c1,c2<sp/>complex;<sp/>r1,r2<sp/>real)</highlight></codeline>
<codeline lineno="1409"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_rlc_assign(a,r1,c1,r2,c2)<sp/>\</highlight></codeline>
<codeline lineno="1411"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(a)+=(r1)*(c1)+(r2)*(c2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1414"><highlight class="comment">*<sp/>a=z1*c1+z2*c2<sp/>(a,z1,c1,z2,c2<sp/>complex)</highlight></codeline>
<codeline lineno="1415"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_clc(a,z1,c1,z2,c2)<sp/>\</highlight></codeline>
<codeline lineno="1417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(a)=(z1)*(c1)+(z2)*(c2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1420"><highlight class="comment">*<sp/>a+=z1*c1+z2*c2<sp/>(a,z1,c1,z2,c2<sp/>complex)</highlight></codeline>
<codeline lineno="1421"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_complex_clc_assign(a,z1,c1,z2,c2)<sp/>\</highlight></codeline>
<codeline lineno="1423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(a)+=(z1)*(c1)+(z2)*(c2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/gpu_complex.h"/>
  </compounddef>
</doxygen>
