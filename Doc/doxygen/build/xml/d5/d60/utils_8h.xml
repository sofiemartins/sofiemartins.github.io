<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d5/d60/utils_8h" kind="file" language="C++">
    <compoundname>utils.h</compoundname>
    <includes refid="d9/d21/suN__types_8h" local="yes">suN_types.h</includes>
    <includes refid="d3/ded/spinor__field_8h" local="yes">spinor_field.h</includes>
    <includes refid="d3/d5d/inverters_8h" local="yes">inverters.h</includes>
    <includes refid="d4/d67/geometry_8h" local="yes">geometry.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">sys/time.h</includes>
    <includedby refid="d0/d40/dirac_8h" local="yes">dirac.h</includedby>
    <incdepgraph>
      <node id="8">
        <label>hr_omp.h</label>
        <link refid="d6/da7/hr__omp_8h_source"/>
      </node>
      <node id="1">
        <label>utils.h</label>
        <link refid="d5/d60/utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>spinor_field.h</label>
        <link refid="d3/ded/spinor__field_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cpu_complex.h</label>
        <link refid="d2/dfb/cpu__complex_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>suN_types.h</label>
        <link refid="d9/d21/suN__types_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>error.h</label>
        <link refid="da/d41/error_8h_source"/>
      </node>
      <node id="10">
        <label>field_ordering.h</label>
        <link refid="da/dac/field__ordering_8h_source"/>
      </node>
      <node id="3">
        <label>hr_complex.h</label>
        <link refid="d1/d74/hr__complex_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>tgmath.h</label>
      </node>
      <node id="7">
        <label>geometry.h</label>
        <link refid="d4/d67/geometry_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>sys/time.h</label>
      </node>
      <node id="11">
        <label>inverters.h</label>
        <link refid="d3/d5d/inverters_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>dirac.h</label>
        <link refid="d0/d40/dirac_8h_source"/>
      </node>
      <node id="1">
        <label>utils.h</label>
        <link refid="d5/d60/utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d4/dad/structBCs__pars__t" prot="public">BCs_pars_t</innerclass>
    <innerclass refid="de/d23/struct__eva__prec" prot="public">_eva_prec</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="d5/d60/utils_8h_1a5db8d31c43e55fe276f2eebbbe693dba" prot="public" static="no" strong="no">
        <type></type>
        <name>eval_spat_block</name>
        <enumvalue id="d5/d60/utils_8h_1a5db8d31c43e55fe276f2eebbbe693dbaa260915163de204cb64dfb63e2732e3e7" prot="public">
          <name>NEW_SBLK</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d5/d60/utils_8h_1a5db8d31c43e55fe276f2eebbbe693dbaa873b9df680b1e835382081cf66321995" prot="public">
          <name>CONT_SBLK</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="149" column="1" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" bodystart="150" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d5/d60/utils_8h_1a4c94378f764deeabfce528edb9220cae" prot="public" static="no">
        <type>struct <ref refid="de/d23/struct__eva__prec" kindref="compound">_eva_prec</ref></type>
        <definition>typedef struct _eva_prec eva_prec</definition>
        <argsstring></argsstring>
        <name>eva_prec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="115" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d5/d60/utils_8h_1a73f0879f2d7ca34e983411bfc722a1c0" prot="public" static="no" mutable="no">
        <type>int *</type>
        <definition>int* active_slices_list</definition>
        <argsstring></argsstring>
        <name>active_slices_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="143" column="12" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="143" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d60/utils_8h_1af4d01db538a025a496b77005830d4afe" prot="public" static="no" mutable="no">
        <type>int *</type>
        <definition>int* glbT_to_active_slices</definition>
        <argsstring></argsstring>
        <name>glbT_to_active_slices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="144" column="12" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="144" declcolumn="12"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d60/utils_8h_1a840c91e5a0b8148998da480924c281c7" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int n_active_slices</definition>
        <argsstring></argsstring>
        <name>n_active_slices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="145" column="12" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="145" declcolumn="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d5/d60/utils_8h_1a5d9a0aee0e4066bf0a4faba50babbac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void suNg_Exp</definition>
        <argsstring>(suNg *u, suNg *X)</argsstring>
        <name>suNg_Exp</name>
        <param>
          <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="29" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="29" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1aeaa8a03bef1a49ccdaf0e42619809ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void suNg_Exp_Taylor</definition>
        <argsstring>(suNg *u, suNg *X)</argsstring>
        <name>suNg_Exp_Taylor</name>
        <param>
          <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="30" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1ab141aabbb46e63ef61c8d2a1a898023a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ExpX</definition>
        <argsstring>(double dt, suNg_algebra_vector *h, suNg *u)</argsstring>
        <name>ExpX</name>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="d3/dcb/structsuNg__algebra__vector" kindref="compound">suNg_algebra_vector</ref> *</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="31" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="31" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1ac051cbd70123e2ae9a4f3ab51e2490cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vector_star</definition>
        <argsstring>(suNg_vector *, suNg_vector *)</argsstring>
        <name>vector_star</name>
        <param>
          <type><ref refid="d3/d0c/structsuNg__vector" kindref="compound">suNg_vector</ref> *</type>
        </param>
        <param>
          <type><ref refid="d3/d0c/structsuNg__vector" kindref="compound">suNg_vector</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="33" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="33" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a33a62c58d6c163b8e2f36a50a947f173" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_BCs</definition>
        <argsstring>(BCs_pars_t *pars)</argsstring>
        <name>init_BCs</name>
        <param>
          <type><ref refid="d4/dad/structBCs__pars__t" kindref="compound">BCs_pars_t</ref> *</type>
          <declname>pars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="46" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="46" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1afb03073fcad1d405442ce76adbc68960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_plaq_open_BCs</definition>
        <argsstring>(double *plaq_weight, double *rect_weight, double ct, double cs)</argsstring>
        <name>init_plaq_open_BCs</name>
        <param>
          <type>double *</type>
          <declname>plaq_weight</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rect_weight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ct</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="47" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="47" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a7f3497b185cea38725cd3280ac6b7f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_BCs</definition>
        <argsstring>()</argsstring>
        <name>free_BCs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="49" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="49" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1ae1204495c5a064ed314521806572db7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apply_BCs_on_represented_gauge_field</definition>
        <argsstring>()</argsstring>
        <name>apply_BCs_on_represented_gauge_field</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="50" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a71d6cc93a1ad2ff30146e1f3393431ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apply_BCs_on_fundamental_gauge_field</definition>
        <argsstring>()</argsstring>
        <name>apply_BCs_on_fundamental_gauge_field</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="51" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1aa26fb4407d66468e833b4257e7ff673f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apply_BCs_on_momentum_field</definition>
        <argsstring>(suNg_av_field *force)</argsstring>
        <name>apply_BCs_on_momentum_field</name>
        <param>
          <type><ref refid="d4/d75/struct__suNg__av__field" kindref="compound">suNg_av_field</ref> *</type>
          <declname>force</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="52" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1aaab11e11309e12be9dc02bc372920ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apply_BCs_on_spinor_field</definition>
        <argsstring>(spinor_field *sp)</argsstring>
        <name>apply_BCs_on_spinor_field</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="53" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1ac296726bb30a3f68e694a945070dfc40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apply_BCs_on_spinor_field_flt</definition>
        <argsstring>(spinor_field_flt *sp)</argsstring>
        <name>apply_BCs_on_spinor_field_flt</name>
        <param>
          <type><ref refid="d0/d00/struct__spinor__field__flt" kindref="compound">spinor_field_flt</ref> *</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="54" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a409fd928bbd842ce74b385772923ed04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apply_background_field_zdir</definition>
        <argsstring>(suNg_field *V, double Q, int n)</argsstring>
        <name>apply_background_field_zdir</name>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="55" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="55" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a764d2fc03e450ceaf601be4fa3b0c165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apply_BCs_on_clover_term</definition>
        <argsstring>(suNfc_field *)</argsstring>
        <name>apply_BCs_on_clover_term</name>
        <param>
          <type><ref refid="d2/db6/struct__suNfc__field" kindref="compound">suNfc_field</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="56" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a474d9d97f86935867fb9b2d3154ba33f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_pure_gauge_anisotropy</definition>
        <argsstring>(double *chi)</argsstring>
        <name>init_pure_gauge_anisotropy</name>
        <param>
          <type>double *</type>
          <declname>chi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="58" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="58" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a27b44cd4795b132156eea0072e07bd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SF_classical_solution</definition>
        <argsstring>()</argsstring>
        <name>SF_classical_solution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="60" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="60" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a39a1b2cc1917b5e56be53a0abb32f7fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int safe_mod</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>safe_mod</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="62" column="12" bodyfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a3750a62610eefd602a81f3afff286cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shift_fields</definition>
        <argsstring>(int *shift, spinor_field *sin, suNg_field *uin, spinor_field *sout, suNg_field *uout)</argsstring>
        <name>shift_fields</name>
        <param>
          <type>int *</type>
          <declname>shift</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>sin</declname>
        </param>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
          <declname>uin</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>sout</declname>
        </param>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
          <declname>uout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="71" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="71" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1affc56e2840f4cfb6220912ca7295ab72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cross_prod</definition>
        <argsstring>(suNg_vector *v1, suNg_vector *v2, suNg_vector *v3)</argsstring>
        <name>cross_prod</name>
        <param>
          <type><ref refid="d3/d0c/structsuNg__vector" kindref="compound">suNg_vector</ref> *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type><ref refid="d3/d0c/structsuNg__vector" kindref="compound">suNg_vector</ref> *</type>
          <declname>v2</declname>
        </param>
        <param>
          <type><ref refid="d3/d0c/structsuNg__vector" kindref="compound">suNg_vector</ref> *</type>
          <declname>v3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="73" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="73" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1aea0a9943d76c239e450e1ce4aa6de1d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cross_prod_flt</definition>
        <argsstring>(suNg_vector_flt *v1, suNg_vector_flt *v2, suNg_vector_flt *v3)</argsstring>
        <name>cross_prod_flt</name>
        <param>
          <type><ref refid="d1/d07/structsuNg__vector__flt" kindref="compound">suNg_vector_flt</ref> *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type><ref refid="d1/d07/structsuNg__vector__flt" kindref="compound">suNg_vector_flt</ref> *</type>
          <declname>v2</declname>
        </param>
        <param>
          <type><ref refid="d1/d07/structsuNg__vector__flt" kindref="compound">suNg_vector_flt</ref> *</type>
          <declname>v3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="74" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1adaba7c2023504a788b566f0e279321a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void project_to_suNg</definition>
        <argsstring>(suNg *u)</argsstring>
        <name>project_to_suNg</name>
        <param>
          <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="75" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="75" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1adb9502ffd47be0d67c9ed77c1b22f107" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void project_to_suNg_flt</definition>
        <argsstring>(suNg_flt *u)</argsstring>
        <name>project_to_suNg_flt</name>
        <param>
          <type><ref refid="d1/d3e/structsuNg__flt" kindref="compound">suNg_flt</ref> *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="76" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="76" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1ae7b79f85eefe173ab13b57399b0c1554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void project_cooling_to_suNg</definition>
        <argsstring>(suNg *g_out, suNg *g_in, int cooling)</argsstring>
        <name>project_cooling_to_suNg</name>
        <param>
          <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>g_out</declname>
        </param>
        <param>
          <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>g_in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cooling</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="77" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="77" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1adbc6551c34e993c2e9922658c22950ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void covariant_project_to_suNg</definition>
        <argsstring>(suNg *u)</argsstring>
        <name>covariant_project_to_suNg</name>
        <param>
          <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="78" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1adf544b7fe3566c3a3b290e0b154578ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ludcmp</definition>
        <argsstring>(hr_complex *a, int *indx, double *d, int N)</argsstring>
        <name>ludcmp</name>
        <param>
          <type><ref refid="d7/de2/structhr__complex" kindref="compound">hr_complex</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="81" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a8c653b05a3d681b33e51f42e10501eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lubksb</definition>
        <argsstring>(hr_complex *a, int *indx, hr_complex *b, int N)</argsstring>
        <name>lubksb</name>
        <param>
          <type><ref refid="d7/de2/structhr__complex" kindref="compound">hr_complex</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>indx</declname>
        </param>
        <param>
          <type><ref refid="d7/de2/structhr__complex" kindref="compound">hr_complex</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="82" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a86946860e16d84db21e6752883d18274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void inv_hermNg</definition>
        <argsstring>(suNg *a)</argsstring>
        <name>inv_hermNg</name>
        <param>
          <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="83" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="83" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1adf61da4c73d767f75bb8ae93b3ef1ed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void det_hermNg</definition>
        <argsstring>(hr_complex *res, suNg *a)</argsstring>
        <name>det_hermNg</name>
        <param>
          <type><ref refid="d7/de2/structhr__complex" kindref="compound">hr_complex</ref> *</type>
          <declname>res</declname>
        </param>
        <param>
          <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="84" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="84" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1aaf018741de0c8151e9d72c251c947c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void assign_u2ud</definition>
        <argsstring>(void)</argsstring>
        <name>assign_u2ud</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="92" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="92" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a4312004aeea6feab3ae8f8926e760f17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void assign_ud2u</definition>
        <argsstring>(void)</argsstring>
        <name>assign_ud2u</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="93" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="93" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a9010ea2d42d91814d8da8f735fc07a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void assign_ud2u_f</definition>
        <argsstring>(void)</argsstring>
        <name>assign_ud2u_f</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="94" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="94" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a92733e956e3ee72ce6977548a3bf6183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void assign_s2sd</definition>
        <argsstring>(spinor_field *out, spinor_field_flt *in)</argsstring>
        <name>assign_s2sd</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d0/d00/struct__spinor__field__flt" kindref="compound">spinor_field_flt</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="99" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a0386d68ca5b4b3bcfca3cc9f838bbc2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void assign_sd2s</definition>
        <argsstring>(spinor_field_flt *out, spinor_field *in)</argsstring>
        <name>assign_sd2s</name>
        <param>
          <type><ref refid="d0/d00/struct__spinor__field__flt" kindref="compound">spinor_field_flt</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="100" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="100" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1adaa2d3996ee93dd12aff791ad700884f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int max_H</definition>
        <argsstring>(spinor_operator H, geometry_descriptor *type, double *max)</argsstring>
        <name>max_H</name>
        <param>
          <type>spinor_operator</type>
          <declname>H</declname>
        </param>
        <param>
          <type><ref refid="db/d43/struct__geometry__descriptor" kindref="compound">geometry_descriptor</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="103" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="103" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1abc0d5b2d3ab955ce33a8bf1d3f6d5bfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_def_matrix</definition>
        <argsstring>(eva_prec *e_par, spinor_operator H, geometry_descriptor *type)</argsstring>
        <name>set_def_matrix</name>
        <param>
          <type><ref refid="de/d23/struct__eva__prec" kindref="compound">eva_prec</ref> *</type>
          <declname>e_par</declname>
        </param>
        <param>
          <type>spinor_operator</type>
          <declname>H</declname>
        </param>
        <param>
          <type><ref refid="db/d43/struct__geometry__descriptor" kindref="compound">geometry_descriptor</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="116" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="116" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1ac2bc1cf4fd64e18f9708a38dfb24c654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eva_def</definition>
        <argsstring>(spinor_field *out, spinor_field *in)</argsstring>
        <name>eva_def</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="117" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="117" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1ae46c9a17aca51a0e1856d7728a0b02c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eva_def_inv</definition>
        <argsstring>(spinor_field *out, spinor_field *in, double m)</argsstring>
        <name>eva_def_inv</name>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="118" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="118" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a8d1047d64e2328b4cc7ea64c77d6816f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spatialHYP_smearing</definition>
        <argsstring>(suNg_field *out, suNg_field *in, double weight[3])</argsstring>
        <name>spatialHYP_smearing</name>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="121" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1ada31d0ede2dd0c464a421d33313c5304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HYP_smearing</definition>
        <argsstring>(suNg_field *out, suNg_field *in, double weight[3])</argsstring>
        <name>HYP_smearing</name>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="122" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="122" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1aad2e57e3acad3cfeae1da6a31a10c3b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double min_tplaq</definition>
        <argsstring>(suNg_field *g)</argsstring>
        <name>min_tplaq</name>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="123" column="8" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="123" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a7a9793d07403d5384d36dadb9a0c2db1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HYP_span_parameters</definition>
        <argsstring>(double mtp[6859])</argsstring>
        <name>HYP_span_parameters</name>
        <param>
          <type>double</type>
          <declname>mtp</declname>
          <array>[6859]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="124" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a54e239807f5f25076f801ab64c219b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HYP_best_parameters</definition>
        <argsstring>(double mtp[6859], double w[3])</argsstring>
        <name>HYP_best_parameters</name>
        <param>
          <type>double</type>
          <declname>mtp</declname>
          <array>[6859]</array>
        </param>
        <param>
          <type>double</type>
          <declname>w</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="125" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="125" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a1dec6ba085ce91733e9c4c7e6088a598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int timeval_subtract</definition>
        <argsstring>(struct timeval *result, struct timeval *x, struct timeval *y)</argsstring>
        <name>timeval_subtract</name>
        <param>
          <type>struct timeval *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>struct timeval *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>struct timeval *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="129" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="129" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1ac126e0bdd0c3d9dc5eaf7a730c347278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_compiling_info</definition>
        <argsstring>()</argsstring>
        <name>print_compiling_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="132" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1ad9976a27c24d5c8dec77286001ed56b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_compiling_info_short</definition>
        <argsstring>()</argsstring>
        <name>print_compiling_info_short</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="133" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="133" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a1451242936965238a9e370d1ccab1b26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialize_spatial_active_slices</definition>
        <argsstring>(int *tlist)</argsstring>
        <name>initialize_spatial_active_slices</name>
        <param>
          <type>int *</type>
          <declname>tlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="136" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="136" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a3e199acf06ef8d94db1b49e621391e49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_spatial_active_slices</definition>
        <argsstring>()</argsstring>
        <name>free_spatial_active_slices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="137" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="137" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a67c9bdf6609591066ce885ac045da64e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int spatial_blocking_wrkspace</definition>
        <argsstring>(eval_spat_block eval, unsigned int level)</argsstring>
        <name>spatial_blocking_wrkspace</name>
        <param>
          <type>eval_spat_block</type>
          <declname>eval</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="155" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="155" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a857fd07d07a444c30fd91c632488da83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int single_level_spatial_blocking_wrkspace</definition>
        <argsstring>(int wrk_in)</argsstring>
        <name>single_level_spatial_blocking_wrkspace</name>
        <param>
          <type>int</type>
          <declname>wrk_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="156" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="156" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a879e6d6ebadcb24284873a4e6abaeff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void assign_spatial_rotated_wrkspace</definition>
        <argsstring>(int *map, int idx_wrkspace)</argsstring>
        <name>assign_spatial_rotated_wrkspace</name>
        <param>
          <type>int *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx_wrkspace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="159" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="159" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a13a919782cd721ca8c33bc22f213f9a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int spatial_APE_smear_wrkspace</definition>
        <argsstring>(double *smear_val, int wrkspace_in)</argsstring>
        <name>spatial_APE_smear_wrkspace</name>
        <param>
          <type>double *</type>
          <declname>smear_val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>wrkspace_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="162" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="162" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1af21b1032e357ea4ca53fe531f5c49bf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int iup_wrk</definition>
        <argsstring>(int site, int dir)</argsstring>
        <name>iup_wrk</name>
        <param>
          <type>int</type>
          <declname>site</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="165" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="165" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a7f7f39ffbafa12b36535a2db3896851e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int idn_wrk</definition>
        <argsstring>(int site, int dir)</argsstring>
        <name>idn_wrk</name>
        <param>
          <type>int</type>
          <declname>site</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="166" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="166" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a73c25749767de09b797985eaefb11407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref> *</type>
        <definition>suNg* pu_gauge_wrk</definition>
        <argsstring>(int site, int dir)</argsstring>
        <name>pu_gauge_wrk</name>
        <param>
          <type>int</type>
          <declname>site</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="167" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="167" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a429a6ecfb0425a0dd97b9fe54ae9eac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> *</type>
        <definition>suNg_field* u_gauge_wrk</definition>
        <argsstring>()</argsstring>
        <name>u_gauge_wrk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="168" column="12" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="168" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a024bbfdd1ff9db0624ed0c0344c3ba21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset_wrk_pointers</definition>
        <argsstring>()</argsstring>
        <name>reset_wrk_pointers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="169" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="169" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a835992f9ea76ef5d919dd50292abf938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_wrk_space</definition>
        <argsstring>(int i)</argsstring>
        <name>set_wrk_space</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="170" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="170" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1ace2a67bb83a1a2240081a587db969d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_wrk_space_and_pointers</definition>
        <argsstring>(int i, suNg_field **g_wrk_out, int **i_up_wrk_out, int **i_dn_wrk_out)</argsstring>
        <name>set_wrk_space_and_pointers</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> **</type>
          <declname>g_wrk_out</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>i_up_wrk_out</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>i_dn_wrk_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="171" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="171" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a1600e0b3d1d15d71cb4e5e50ddd7886c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reserve_wrk_space</definition>
        <argsstring>()</argsstring>
        <name>reserve_wrk_space</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="172" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="172" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a1f81b1c8072234d1d3df5bdde8a1dc3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reserve_wrk_space_with_pointers</definition>
        <argsstring>(suNg_field **g_wrk_out, int **i_up_wrk_out, int **i_dn_wrk_out)</argsstring>
        <name>reserve_wrk_space_with_pointers</name>
        <param>
          <type><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref> **</type>
          <declname>g_wrk_out</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>i_up_wrk_out</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>i_dn_wrk_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="173" column="5" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="173" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a1587f219829a47ceb3335a9a43135969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void release_wrk_space</definition>
        <argsstring>(int id_release)</argsstring>
        <name>release_wrk_space</name>
        <param>
          <type>int</type>
          <declname>id_release</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="174" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="174" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d60/utils_8h_1a441159dad66c62c3804b45f2ae569688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_wrk_space</definition>
        <argsstring>()</argsstring>
        <name>free_wrk_space</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" line="175" column="6" declfile="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h" declline="175" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************\</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>(c)<sp/>2008,<sp/>Claudio<sp/>Pica<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>All<sp/>rights<sp/>reserved.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">\***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>File<sp/>utils.h</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>Some<sp/>useful<sp/>functions</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;suN_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spinor_field.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;inverters.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;geometry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*SUN<sp/>exp<sp/>matrix*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>suNg_Exp(<ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*u,<sp/><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*X);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>suNg_Exp_Taylor(<ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*u,<sp/><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*X);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExpX(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt,<sp/><ref refid="d3/dcb/structsuNg__algebra__vector" kindref="compound">suNg_algebra_vector</ref><sp/>*h,<sp/><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*u);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vector_star(<ref refid="d3/d0c/structsuNg__vector" kindref="compound">suNg_vector</ref><sp/>*,<sp/><ref refid="d3/d0c/structsuNg__vector" kindref="compound">suNg_vector</ref><sp/>*);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="d4/dad/structBCs__pars__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gauge_boundary_improvement_cs;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gauge_boundary_improvement_ct;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>chiSF_boundary_improvement_ds;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fermion_twisting_theta[4];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SF_BCs;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>gauge_boundary_up;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>gauge_boundary_dn;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/><ref refid="d4/dad/structBCs__pars__t" kindref="compound">BCs_pars_t</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_BCs(<ref refid="d4/dad/structBCs__pars__t" kindref="compound">BCs_pars_t</ref><sp/>*pars);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_plaq_open_BCs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*plaq_weight,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*rect_weight,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ct,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cs);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_BCs();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>apply_BCs_on_represented_gauge_field();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>apply_BCs_on_fundamental_gauge_field();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>apply_BCs_on_momentum_field(<ref refid="d4/d75/struct__suNg__av__field" kindref="compound">suNg_av_field</ref><sp/>*force);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>apply_BCs_on_spinor_field(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*sp);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>apply_BCs_on_spinor_field_flt(<ref refid="d0/d00/struct__spinor__field__flt" kindref="compound">spinor_field_flt</ref><sp/>*sp);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>apply_background_field_zdir(<ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*V,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Q,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>apply_BCs_on_clover_term(<ref refid="d2/db6/struct__suNfc__field" kindref="compound">suNfc_field</ref><sp/>*);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_pure_gauge_anisotropy(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*chi);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SF_classical_solution();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>safe_mod(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>%<sp/>y);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((y<sp/>-<sp/>(abs(x)<sp/>%<sp/>y))<sp/>%<sp/>y);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*Global<sp/>shift<sp/>for<sp/>fields,<sp/>the<sp/>routine<sp/>accepts<sp/>also<sp/>NULL<sp/>entries<sp/>in<sp/>which<sp/>case<sp/>it<sp/>does<sp/>nothing*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shift_fields(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*shift,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*sin,<sp/><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*uin,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*sout,<sp/><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*uout);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cross_prod(<ref refid="d3/d0c/structsuNg__vector" kindref="compound">suNg_vector</ref><sp/>*v1,<sp/><ref refid="d3/d0c/structsuNg__vector" kindref="compound">suNg_vector</ref><sp/>*v2,<sp/><ref refid="d3/d0c/structsuNg__vector" kindref="compound">suNg_vector</ref><sp/>*v3);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cross_prod_flt(<ref refid="d1/d07/structsuNg__vector__flt" kindref="compound">suNg_vector_flt</ref><sp/>*v1,<sp/><ref refid="d1/d07/structsuNg__vector__flt" kindref="compound">suNg_vector_flt</ref><sp/>*v2,<sp/><ref refid="d1/d07/structsuNg__vector__flt" kindref="compound">suNg_vector_flt</ref><sp/>*v3);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>project_to_suNg(<ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*u);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>project_to_suNg_flt(<ref refid="d1/d3e/structsuNg__flt" kindref="compound">suNg_flt</ref><sp/>*u);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>project_cooling_to_suNg(<ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*g_out,<sp/><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*g_in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cooling);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>covariant_project_to_suNg(<ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*u);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GAUGE_SON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ludcmp(<ref refid="d7/de2/structhr__complex" kindref="compound">hr_complex</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*indx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lubksb(<ref refid="d7/de2/structhr__complex" kindref="compound">hr_complex</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*indx,<sp/><ref refid="d7/de2/structhr__complex" kindref="compound">hr_complex</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>inv_hermNg(<ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*a);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>det_hermNg(<ref refid="d7/de2/structhr__complex" kindref="compound">hr_complex</ref><sp/>*res,<sp/><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*a);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>project_to_suNg_real(<ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*out,<sp/><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*in);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>inv_Cmplx_Ng(<ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*a);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>det_Cmplx_Ng(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*res,<sp/><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*a);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>diag_hmat(<ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*hmat,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dag);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign_u2ud(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign_ud2u(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign_ud2u_f(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>void<sp/>assign_s2sd(int<sp/>len,<sp/>suNf_spinor<sp/>*out,<sp/>suNf_spinor_flt<sp/>*in);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>void<sp/>assign_sd2s(int<sp/>len,<sp/>suNf_spinor_flt<sp/>*out,<sp/>suNf_spinor<sp/>*in);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign_s2sd(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*out,<sp/><ref refid="d0/d00/struct__spinor__field__flt" kindref="compound">spinor_field_flt</ref><sp/>*in);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign_sd2s(<ref refid="d0/d00/struct__spinor__field__flt" kindref="compound">spinor_field_flt</ref><sp/>*out,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*in);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>use<sp/>power<sp/>method<sp/>to<sp/>find<sp/>max<sp/>eigvalue<sp/>of<sp/>H2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_H(spinor_operator<sp/>H,<sp/><ref refid="db/d43/struct__geometry__descriptor" kindref="compound">geometry_descriptor</ref><sp/>*type,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*max);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EVA<sp/>preconditioning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="de/d23/struct__eva__prec" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="de/d23/struct__eva__prec" kindref="compound">_eva_prec</ref></highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>EVA<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nevt;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>search<sp/>space<sp/>dimension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nev;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>accurate<sp/>eigenvalues<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kmax;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>max<sp/>degree<sp/>of<sp/>polynomial<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxiter;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>max<sp/>number<sp/>of<sp/>subiterations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega1;<sp/></highlight><highlight class="comment">/*<sp/>absolute<sp/>precision<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega2;<sp/></highlight><highlight class="comment">/*<sp/>relative<sp/>precision<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}<sp/><ref refid="de/d23/struct__eva__prec" kindref="compound">eva_prec</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_def_matrix(<ref refid="de/d23/struct__eva__prec" kindref="compound">eva_prec</ref><sp/>*e_par,<sp/>spinor_operator<sp/>H,<sp/><ref refid="db/d43/struct__geometry__descriptor" kindref="compound">geometry_descriptor</ref><sp/>*type);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eva_def(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*out,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*in);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eva_def_inv(<ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*out,<sp/><ref refid="d3/d33/struct__spinor__field" kindref="compound">spinor_field</ref><sp/>*in,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>HYP<sp/>smearing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spatialHYP_smearing(<ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*out,<sp/><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*in,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight[3]);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HYP_smearing(<ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*out,<sp/><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*in,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight[3]);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_tplaq(<ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*g);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HYP_span_parameters(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtp[6859]);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HYP_best_parameters(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mtp[6859],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w[3]);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Timing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeval_subtract(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*result,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*x,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*y);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CINFO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_compiling_info();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_compiling_info_short();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Spatial<sp/>Trasformations*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize_spatial_active_slices(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*tlist);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_spatial_active_slices();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MAIN_PROGRAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*active_slices_list<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*glbT_to_active_slices<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_active_slices;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*active_slices_list;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*glbT_to_active_slices;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_active_slices;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Spatial<sp/>blocking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>NEW_SBLK<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>CONT_SBLK<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/>eval_spat_block;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spatial_blocking_wrkspace(eval_spat_block<sp/>eval,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>single_level_spatial_blocking_wrkspace(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wrk_in);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Spatial<sp/>rotation*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign_spatial_rotated_wrkspace(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*map,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_wrkspace);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Spatial<sp/>APE<sp/>smearing*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spatial_APE_smear_wrkspace(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*smear_val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wrkspace_in);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Workspace<sp/>database*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iup_wrk(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>site,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idn_wrk(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>site,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="d8/d0f/structsuNg" kindref="compound">suNg</ref><sp/>*pu_gauge_wrk(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>site,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>*u_gauge_wrk();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_wrk_pointers();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_wrk_space(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_wrk_space_and_pointers(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>**g_wrk_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**i_up_wrk_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**i_dn_wrk_out);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reserve_wrk_space();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reserve_wrk_space_with_pointers(<ref refid="d9/d96/struct__suNg__field" kindref="compound">suNg_field</ref><sp/>**g_wrk_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**i_up_wrk_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**i_dn_wrk_out);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>release_wrk_space(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id_release);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_wrk_space();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/sofie/Workspace/HiRepDocs/HiRep/Include/utils.h"/>
  </compounddef>
</doxygen>
